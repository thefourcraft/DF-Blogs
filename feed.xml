<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>DF Blogs</title>
    <link href="https://thefourcraft.github.io/DF-Blogs/feed.xml" rel="self" />
    <link href="https://thefourcraft.github.io/DF-Blogs" />
    <updated>2022-08-21T21:04:39+03:00</updated>
    <author>
        <name>thefourCraft</name>
    </author>
    <id>https://thefourcraft.github.io/DF-Blogs</id>

    <entry>
        <title>Nail Beta Testing</title>
        <author>
            <name>thefourCraft</name>
        </author>
        <link href="https://thefourcraft.github.io/DF-Blogs/nail-beta-testing.html"/>
        <id>https://thefourcraft.github.io/DF-Blogs/nail-beta-testing.html</id>

        <updated>2022-08-21T21:04:39+03:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://thefourcraft.github.io/DF-Blogs/media/posts/5/Beta.png" alt="Beta Testing Blog Image" />
                    Beta tests are important for companies and they are benefiting everyone who is involved. Companies that run beta tests are genuinely interested in hearing your feedback and what you think. If you’re selected as a beta tester, you need to make the most of the&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://thefourcraft.github.io/DF-Blogs/media/posts/5/Beta.png" alt="Beta Testing Blog Image" />
                <p>Beta tests are important for companies and they are benefiting everyone who is involved.<br>Companies that run beta tests are genuinely interested in hearing your feedback and what you think. <br>If you’re selected as a beta tester, you need to make the most of the opportunity. <br>Share every thought, note every bug, and get engaged in the process.<br><br>The more active you are on the project, the more likely you will be to earn any project incentive and get other chances to test with the company.<br>If the company likes you they will contact you again and maybe even give you benefits! </p>
<h2>Let's Learn Some Tips To Nail Beta Testing </h2>
<p class="dropcap">1. <strong>Don't OverWork Your Self<br></strong>Spend a little time every day doing something on every part of the product. Budget sometime each day to submit feedback.  By doing a little bit every day you will test the product in its entirety, have great performance numbers, and have a lot of fun Because getting access to beta testing usually means new features and improvements, also remember you are #first.<strong><br></strong></p>
<p class="dropcap">2.<strong>Communicate<br></strong>Be communicative and responsive throughout the project. Remember that the people running the test are eager to hear what you have to say and what you’re experiencing. It’s incredibly important to monitor your bugs, watch the forums, and respond quickly to any inquiries the beta team might have for more information. Being Active and also providing human interest can go a long way.<strong><br></strong></p>
<p class="dropcap">3. <strong>Be Clear and Thorough</strong><br>Make your communication clear and detailed. Your feedback needs to give the beta team a solid understanding of your issues, ideas, and opinions. If they don’t understand what you’re saying or don’t have enough data, they might have to come back to you again, which just takes up more of everyone’s time. They need to be able to understand your comments and act on them immediately. Screenshots and pictures often help. Also writing the issue and using the right words is important, I often use emojis to describe sections and titles. </p>
<p class="dropcap">4.<strong>Privacy as Always </strong><br>Many companies spend months designing and building their test product. They are spending many thousands of dollars to prepare for its launch. If the beta test is private, it’s your responsibility and obligation to keep everything about the beta test secret. Don’t blog, don’t Tweet, don’t chat, don’t post anything anywhere about the beta test. Don’t even mention you are involved in the project. Remember, these companies are trusting you with their new product. In return, you should show them respect by keeping everything you experience a secret. Also, you can get sued, because companies sometimes sign you up with an argument when joining the beta test.</p>
<p class="dropcap">5. <strong>Relax</strong><br>Be flexible and understanding. Product development is a complicated process that involves many people and many tasks. Your role in this process is to share your perspective regarding the product. If the company discovers an important issue or needs to change the direction of the project, that could change the schedule. They might need to extend the test or cut it short to meet their new schedule. These changes are commonplace in beta, so please be willing to adapt to them. At the end of the day, you are just tasked to help beta test the product. </p>
<h3>About Me</h3>
<p>I love beta testing, getting access to tools/products before everyone is a huge key to getting an upper age on the market. <br>Most importantly the benefits that you are getting are knowledge and new people that you can meet and collaborate with in the future.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>How Does a ZTNA Work</title>
        <author>
            <name>thefourCraft</name>
        </author>
        <link href="https://thefourcraft.github.io/DF-Blogs/how-does-a-ztna-work.html"/>
        <id>https://thefourcraft.github.io/DF-Blogs/how-does-a-ztna-work.html</id>
            <category term="Zero Trust"/>

        <updated>2022-08-21T20:31:47+03:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://thefourcraft.github.io/DF-Blogs/media/posts/4/ZTNA.png" alt="ZTNA Blog Post Cover Image" />
                    While the specific tools used to implement Zero Trust Architecture may vary Implementing a Zero Trust Architecture project calls out some key functions: So, you are ready to create your zero-trust network? Implementing zero trust principles within an organization’s environment requires the development of a&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://thefourcraft.github.io/DF-Blogs/media/posts/4/ZTNA.png" alt="ZTNA Blog Post Cover Image" />
                <p>While the specific tools used to implement Zero Trust Architecture may vary<br>Implementing a Zero Trust Architecture project calls out some key functions:</p>
<ul class="learning-list">
<li><strong>Application vs. network access:</strong> <br>ZTNA treats application access separately from network access. Connecting to a network does not automatically grant a user the right to access an application.</li>
<li><strong>Hidden IP addresses:</strong> <br>ZTNA does not expose IP addresses to the network. The rest of the network remains invisible to connected devices, except for the application or service they are connected to.</li>
<li><strong>Device security:</strong> </li>
<li>ZTNA can incorporate the risk and security posture of devices as factors in access decisions. It does this by running software on the device itself (see "Agent-based ZTNA vs. service-based ZTNA" below) or by analyzing network traffic to and from the device.</li>
<li><strong>Additional factors:</strong> </li>
<li>Unlike traditional access control, which only grants access based on user identity and role, ZTNA can evaluate risks associated with additional factors like user location, timing, and frequency of requests, the apps and data being requested, and more. A user could sign in to a network or application, but if their device is not trusted, access is denied.</li>
<li><strong>No MPLS:</strong> <br>ZTNA uses encrypted Internet connections over TLS instead of MPLS-based WAN connections. Traditional corporate networks are built on private MPLS connections. ZTNA is built on the public Internet instead, using TLS encryption to keep network traffic private. ZTNA sets up small encrypted tunnels between a user and an application, as opposed to connecting a user to a larger network.</li>
<li><strong>IdP and SSO:</strong> <br>Most ZTNA solutions integrate with separate identity providers (IdPs), single sign-on (SSO) platforms, or both. SSO allows users to authenticate identity for all applications; the IdP stores user identity and determines associated user privileges.</li>
<li><strong>Agent vs. service:</strong> <br>ZTNA can either use an endpoint agent or be based in the cloud. The difference is explained below.</li>
</ul>
<h2>Explaining the Zero Trust Framework</h2>
<p>So, you are ready to create your zero-trust network?<br>Implementing zero trust principles within an organization’s environment requires the development of a zero trust network. <br>A zero-trust network implements and enforces zero trust policies, such as zero-trust network access (ZTNA) or Software Defined Perimeter (SDP), <br>consistently across an organization’s entire environment.<br><br>In this blog post, I prepared some tips to know if you really need ZTNA for this app</p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Zero Trust vs VPN</title>
        <author>
            <name>thefourCraft</name>
        </author>
        <link href="https://thefourcraft.github.io/DF-Blogs/zero-trust-vs-vpn.html"/>
        <id>https://thefourcraft.github.io/DF-Blogs/zero-trust-vs-vpn.html</id>
            <category term="Zero Trust"/>
            <category term="Cloudflare"/>

        <updated>2022-08-20T21:35:49+03:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://thefourcraft.github.io/DF-Blogs/media/posts/3/VPN-VS-ZN.png" alt="Zero Trust vs VPN Image" />
                    VPN is what many organizations use to control access instead of ZTNA. Once users are logged in to a VPN, they gain access to the entire network and all the resources on that network (this is often called the castle-and-moat model). ZTNA instead only grants&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://thefourcraft.github.io/DF-Blogs/media/posts/3/VPN-VS-ZN.png" alt="Zero Trust vs VPN Image" />
                <p>VPN is what many organizations use to control access instead of ZTNA. <br>Once users are logged in to a VPN, they gain access to the entire network and all the resources on that network (this is often called the castle-and-moat model). ZTNA instead only grants access to the specific application requested and denies access to applications and data by default.<br><br></p>
<p>One of the biggest threats to network security is a company’s own Virtual Private Network (VPN). <br>Based on old network architectures, VPN’s assumption of a securely fixed perimeter surrounding a trusted network is a dated design pattern that undermines security. <br>Zero Trust is a framework of security concepts that are better suited to the way business works today.</p>
<h2 id="what-is-zero-trust" class="sc-ghizgr-0 DIklJ">What is Zero Trust?</h2>
<p>You Can read about it on my main website, and see my demo of a zero-trust system implantation</p>
<h2 id="why-is-zero-trust-a-superior-solution-to-vpns" class="sc-ghizgr-0 DIklJ">Why Zero Trust is Better?</h2>
<p>VPNs are the traditional choice for secure remote access because they work well with legacy perimeter-based security models. <br>However, they have several limitations that make them ill-suited to the security needs of the modern enterprise</p>
<ul>
<li><strong>Perimeter-Focused Security:</strong> <br>VPN helps reinforce the traditional perimeter-based security model because an authenticated user is granted full access to the corporate network. This allows an attacker to move laterally through the corporate network after gaining access via compromised VPN credentials or exploitation of a VPN vulnerability.</li>
<li><strong>Network-Level Access Controls:</strong> <br>VPNs implement access controls at the network level without visibility into or control over the application layer. This provides overly-permissive access to users, granting read, write, and execute access to resources within different applications.</li>
<li><strong>No Cloud Support:</strong> <br>VPNs are typically designed to provide secure remote access to the corporate network. Often, they have limited support for cloud-based resources located outside of the traditional perimeter.</li>
<li><strong>Poor Support for BYOD Devices:</strong> <br>Allowing BYOD devices to access the corporate VPN provides access to corporate resources from unmanaged, non-corporate endpoints. This may allow malware or other cyber threats direct access to the corporate network.</li>
</ul>
<h2>Why ZTNA Is The Future?</h2>
<p>With a zero trust security strategy, VPNs are no longer a viable secure remote access solution. ZTNA offers an alternative with several benefits when compared to VPNs</p>
<p>Implementing zero trust technologies with careful planning will make the cloud a more manageable place for any organization. <br><br>The use of ZTNA, IAM, and MFA can prevent unwanted events from occurring. <br>New compute instances or storage buckets cannot just “pop up” like weeds in unpredictable locations. Zero trust will cultivate them into domesticated plants confined to well-defined flowerpots.</p>
<p>These flowerpots are your micro-perimeters, which you can isolate using micro-segmentation. <br><br>They will enable easier monitoring and tighter access control. Sounds like everything needed for an over-stretched, sleep-deprived security team to defend the new frontier that is the cloud.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>BungeeCord And Spigot Servers Venerability</title>
        <author>
            <name>thefourCraft</name>
        </author>
        <link href="https://thefourcraft.github.io/DF-Blogs/bungeecord-and-spigot-servers-venerability.html"/>
        <id>https://thefourcraft.github.io/DF-Blogs/bungeecord-and-spigot-servers-venerability.html</id>

        <updated>2022-08-20T21:03:53+03:00</updated>
            <summary>
                <![CDATA[
                    Introduction 👋 Most Minecraft servers today use BungeeCord as their proxy manager. What is BungeeCord? BungeeCord is a useful software written in-house by the team at SpigotMC. It acts as a proxy between the player's client and the connected Minecraft servers. End-users of BungeeCord see&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <h2>Introduction 👋</h2>
<p>Most Minecraft servers today use BungeeCord as their proxy manager.<br><strong>What is BungeeCord?</strong><br>BungeeCord is a useful software written in-house by the team at SpigotMC. It acts as a proxy between the player's client and the connected Minecraft servers. End-users of BungeeCord see no difference between it and a normal Minecraft server. - SpigotMC</p>
<h3>The Venerability</h3>
<p>some server owners do a wrong and dangerous setup </p>
            ]]>
        </content>
    </entry>
</feed>
